Fichier: src\main\java\com\example\stage\ai\AIPromptBuilder.java
Package: src\main\java\com\example\stage\ai
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\ai\AIPromptBuilder.java
-----
package com.example.stage.ai;

public class AIPromptBuilder {
    public String buildAnalysisPrompt(CV cv) {
        // Construction du prompt pour l'analyse
        StringBuilder prompt = new StringBuilder();
        prompt.append("Analyze this CV for a ");
        prompt.append(cv.getProfileType());
        // ... autres logiques de construction du prompt
        return prompt.toString();
    }
}
==================================================

Fichier: src\main\java\com\example\stage\ai\AIResponseParser.java
Package: src\main\java\com\example\stage\ai
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\ai\AIResponseParser.java
-----
//package com.example.stage.ai;
//
//public class AIResponseParser {
//    public CVAnalysis parseAnalysisResponse(String aiResponse) {
//        // Parser la réponse de l'IA
//        return new CVAnalysis();
//    }
//}
==================================================

Fichier: src\main\java\com\example\stage\client\HuggingFaceClient.java
Package: src\main\java\com\example\stage\client
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\client\HuggingFaceClient.java
-----
package com.example.stage.client;

import com.example.stage.config.HuggingFaceConfig;
import okhttp3.*;
import org.springframework.stereotype.Component;
import java.io.IOException;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@Component
public class HuggingFaceClient {
    private static final Logger logger = LoggerFactory.getLogger(HuggingFaceClient.class);
    private final OkHttpClient client;
    private final HuggingFaceConfig config;
    private static final MediaType JSON = MediaType.get("application/json; charset=utf-8");

    public HuggingFaceClient(HuggingFaceConfig config) {
        this.client = new OkHttpClient.Builder()
                .build();
        this.config = config;
    }

    public String generateText(String prompt) throws IOException {
        try {
            RequestBody body = RequestBody.create(
                    String.format("{\"inputs\":\"%s\"}", prompt.replace("\"", "\\\"")),
                    JSON
            );

            Request request = new Request.Builder()
                    .url(config.getApiUrl() + config.getModelId())
                    .post(body)
                    .addHeader("Authorization", "Bearer " + config.getApiKey())
                    .build();

            try (Response response = client.newCall(request).execute()) {
                if (!response.isSuccessful()) {
                    logger.error("API call failed with code: {}", response.code());
                    throw new IOException("Unexpected code " + response);
                }
                return response.body().string();
            }
        } catch (Exception e) {
            logger.error("Error generating text: {}", e.getMessage());
            throw new IOException("Failed to generate text", e);
        }
    }
}
==================================================

Fichier: src\main\java\com\example\stage\config\HuggingFaceConfig.java
Package: src\main\java\com\example\stage\config
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\config\HuggingFaceConfig.java
-----
package com.example.stage.config;

import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.context.annotation.Configuration;

@Configuration
@ConfigurationProperties(prefix = "huggingface")
public class HuggingFaceConfig {
    private String apiKey;
    private String apiUrl = "https://api-inference.huggingface.co/models/";
    private String modelId = "gpt2";

    // Getters et Setters
    public String getApiKey() {
        return apiKey;
    }

    public void setApiKey(String apiKey) {
        this.apiKey = apiKey;
    }

    public String getApiUrl() {
        return apiUrl;
    }

    public void setApiUrl(String apiUrl) {
        this.apiUrl = apiUrl;
    }

    public String getModelId() {
        return modelId;
    }

    public void setModelId(String modelId) {
        this.modelId = modelId;
    }
}
==================================================

Fichier: src\main\java\com\example\stage\config\ProfileConfigurations.java
Package: src\main\java\com\example\stage\config
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\config\ProfileConfigurations.java
-----
package com.example.stage.config;

public class ProfileConfigurations {
    // Configurations spécifiques pour chaque profil ESPRIT
    private static final Map<String, ProfileConfig> PROFILE_CONFIGS = new HashMap<>();

    static {
        initializeEngineeringConfigs();
        initializeBusinessConfigs();
        initializeMasterConfigs();
    }

    private static void initializeEngineeringConfigs() {
        // Configuration pour chaque type d'ingénierie
    }
}
==================================================

Fichier: src\main\java\com\example\stage\controller\AdminController.java
Package: src\main\java\com\example\stage\controller
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\controller\AdminController.java
-----
package com.example.stage.controller;

import com.example.stage.dao.UtilisateurDAO;
import javafx.fxml.FXML;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.ListView;

import java.util.List;

public class AdminController {

    @FXML
    private ListView<String> entreprisesEnAttenteListView; // Liste des entreprises en attente
    @FXML
    private Button approuverButton;
    @FXML
    private Button rejeterButton;
    @FXML
    private Label messageLabel;

    private UtilisateurDAO utilisateurDAO = new UtilisateurDAO();

    // Méthode appelée lors du chargement de la page
    @FXML
    public void initialize() {
        chargerEntreprisesEnAttente();
    }

    // Charger la liste des entreprises en attente
    private void chargerEntreprisesEnAttente() {
        List<String> entreprises = utilisateurDAO.getEntreprisesEnAttente();
        entreprisesEnAttenteListView.getItems().addAll(entreprises);
    }

    // Approuver une entreprise
    @FXML
    public void approuverEntreprise() {
        String selectedItem = entreprisesEnAttenteListView.getSelectionModel().getSelectedItem();
        if (selectedItem == null) {
            messageLabel.setText("Veuillez sélectionner une entreprise à approuver.");
            return;
        }

        String email = extraireEmailDeTexte(selectedItem);

        if (utilisateurDAO.approuverEntreprise(email)) {
            entreprisesEnAttenteListView.getItems().remove(selectedItem); // Retirer l'entreprise de la liste
            messageLabel.setText("Entreprise approuvée avec succès !");
        } else {
            messageLabel.setText("Échec de l'approbation de l'entreprise.");
        }
    }

    // Rejeter une entreprise
    @FXML
    public void rejeterEntreprise() {
        String selectedItem = entreprisesEnAttenteListView.getSelectionModel().getSelectedItem();
        if (selectedItem == null) {
            messageLabel.setText("Veuillez sélectionner une entreprise à rejeter.");
            return;
        }

        String email = extraireEmailDeTexte(selectedItem);

        if (utilisateurDAO.rejeterEntreprise(email)) {
            entreprisesEnAttenteListView.getItems().remove(selectedItem); // Retirer l'entreprise de la liste
            messageLabel.setText("Entreprise rejetée avec succès !");
        } else {
            messageLabel.setText("Échec du rejet de l'entreprise.");
        }
    }

    // Extraire l'email depuis le texte affiché dans la liste
    private String extraireEmailDeTexte(String text) {
        // Supposons que le format soit "Nom Entreprise - Email"
        String[] parts = text.split(" - ");
        return parts[1].trim(); // Récupérer la partie après " - "
    }
}
==================================================

Fichier: src\main\java\com\example\stage\controller\AdminCreationController.java
Package: src\main\java\com\example\stage\controller
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\controller\AdminCreationController.java
-----
package com.example.stage.controller;

import com.example.stage.model.Administrateur;
import com.example.stage.service.AdministrateurService;
import com.example.stage.util.BCryptUtil;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.scene.control.Label;
import javafx.scene.control.PasswordField;
import javafx.scene.control.TextField;
import javafx.stage.Stage;

import java.io.IOException;

public class AdminCreationController {
    @FXML
    private TextField usernameField;
    @FXML
    private TextField emailField;
    @FXML
    private PasswordField motdepasseField;
    @FXML
    private TextField prenomField;
    @FXML
    private TextField nomCompletField;
    @FXML
    private Label messageLabel;

    private AdministrateurService administrateurService = new AdministrateurService();

    @FXML
    public void creerAdministrateur() {
        String username = usernameField.getText();
        String email = emailField.getText();
        String motdepasse = motdepasseField.getText();
        String prenom = prenomField.getText();
        String nomComplet = nomCompletField.getText();

        if (username.isEmpty() || email.isEmpty() || motdepasse.isEmpty() || prenom.isEmpty() || nomComplet.isEmpty()) {
            messageLabel.setText("Tous les champs sont obligatoires.");
            return;
        }

        String hashedMotdepasse = BCryptUtil.hashPassword(motdepasse);
        Administrateur administrateur = new Administrateur(username, email, hashedMotdepasse, null, prenom, nomComplet);

        if (administrateurService.creerAdministrateur(administrateur)) {
            messageLabel.setText("Administrateur créé avec succès !");
        } else {
            messageLabel.setText("Échec de la création de l'administrateur.");
        }
    }

    private void redirectToLoginPage() {
        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/example/stage/login.fxml"));
            Scene scene = new Scene(loader.load(), 800, 600);
            Stage stage = (Stage) usernameField.getScene().getWindow();
            stage.setScene(scene);
            stage.show();
        } catch (IOException e) {
            e.printStackTrace();
            messageLabel.setText("Erreur lors de la redirection vers la page de connexion.");
        }
    }
}
==================================================

Fichier: src\main\java\com\example\stage\controller\AdminDemandesController.java
Package: src\main\java\com\example\stage\controller
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\controller\AdminDemandesController.java
-----
package com.example.stage.controller;

import com.example.stage.service.UtilisateurService;
import javafx.fxml.FXML;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.ListView;
import java.util.List;

public class AdminDemandesController {
    @FXML
    private ListView<String> entreprisesEnAttenteListView;
    @FXML
    private Button approuverButton;
    @FXML
    private Button rejeterButton;
    @FXML
    private Label messageLabel;

    private UtilisateurService utilisateurService = new UtilisateurService();

    // Load pending enterprise requests
    @FXML
    public void initialize() {
        chargerDemandesEntreprises();
    }

    private void chargerDemandesEntreprises() {
        List<String> entreprises = utilisateurService.getEntreprisesEnAttente();
        entreprisesEnAttenteListView.getItems().clear();
        entreprisesEnAttenteListView.getItems().addAll(entreprises);
    }

    // Approve an enterprise
    @FXML
    public void approuverEntreprise() {
        String selectedItem = entreprisesEnAttenteListView.getSelectionModel().getSelectedItem();
        if (selectedItem == null) {
            messageLabel.setText("Veuillez sélectionner une entreprise à approuver.");
            return;
        }

        String email = extraireEmailDeTexte(selectedItem);
        if (utilisateurService.approuverEntreprise(email)) {
            entreprisesEnAttenteListView.getItems().remove(selectedItem);
            messageLabel.setText("Entreprise approuvée avec succès !");
        } else {
            messageLabel.setText("Échec de l'approbation de l'entreprise.");
        }
        chargerDemandesEntreprises();
    }

    // Reject an enterprise
    @FXML
    public void rejeterEntreprise() {
        String selectedItem = entreprisesEnAttenteListView.getSelectionModel().getSelectedItem();
        if (selectedItem == null) {
            messageLabel.setText("Veuillez sélectionner une entreprise à rejeter.");
            return;
        }

        String email = extraireEmailDeTexte(selectedItem);
        if (utilisateurService.rejeterEntreprise(email)) {
            entreprisesEnAttenteListView.getItems().remove(selectedItem);
            messageLabel.setText("Entreprise rejetée avec succès !");
        } else {
            messageLabel.setText("Échec du rejet de l'entreprise.");
        }
        chargerDemandesEntreprises();
    }

    // Extract email from the displayed text
    private String extraireEmailDeTexte(String text) {
        String[] parts = text.split(" - ");
        return parts[1].trim(); // Assuming format: "Nom Entreprise - Email"
    }
}
==================================================

Fichier: src\main\java\com\example\stage\controller\AdminGestionUtilisateursController.java
Package: src\main\java\com\example\stage\controller
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\controller\AdminGestionUtilisateursController.java
-----
package com.example.stage.controller;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.stage.Stage;
import java.io.IOException;

public class AdminGestionUtilisateursController {
    @FXML
    private Button gererEntreprisesButton;
    @FXML
    private Button gererChercheursEmploiButton;
    @FXML
    private Button retourButton;
    @FXML
    private Button voirToutesLesEntreprisesButton;

    // Open the "Manage All Enterprises" page
    @FXML
    public void ouvrirPageToutesEntreprises() {
        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/example/stage/admin-toutes-entreprises.fxml"));
            Stage stage = (Stage) voirToutesLesEntreprisesButton.getScene().getWindow();
            Scene scene = new Scene(loader.load(), 800, 600);
            stage.setScene(scene);
            stage.show();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    // Open the "Manage All Job Seekers" page
    @FXML
    public void ouvrirPageTousChercheursEmploi() {
        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/example/stage/admin-tous-chercheurs-emploi.fxml"));
            Stage stage = (Stage) gererChercheursEmploiButton.getScene().getWindow();
            stage.setScene(new Scene(loader.load(), 800, 600));
            stage.show();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    // Return to the admin home page
    @FXML
    public void retournerAAdminHome() {
        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/example/stage/admin-home.fxml"));
            Stage stage = (Stage) retourButton.getScene().getWindow();
            stage.setScene(new Scene(loader.load(), 800, 600));
            stage.show();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
==================================================

Fichier: src\main\java\com\example\stage\controller\AdminHomeController.java
Package: src\main\java\com\example\stage\controller
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\controller\AdminHomeController.java
-----
package com.example.stage.controller;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.stage.Stage;
import java.io.IOException;

public class AdminHomeController {
    @FXML
    private Button gererDemandesButton;

    // Open the "Manage Enterprise Requests" page
    @FXML
    public void ouvrirPageDemandesEntreprises() {
        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/example/stage/admin-demandes.fxml"));
            Stage stage = (Stage) gererDemandesButton.getScene().getWindow();
            stage.setScene(new Scene(loader.load(), 800, 600));
            stage.show();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    // Open the "Manage Users" page (optional)
    @FXML
    public void ouvrirPageGestionUtilisateurs() {
        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/example/stage/admin-gestion-utilisateurs.fxml"));
            Stage stage = (Stage) gererDemandesButton.getScene().getWindow();
            stage.setScene(new Scene(loader.load(), 800, 600));
            stage.show();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    // Logout functionality
    @FXML
    public void deconnecter() {
        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/example/stage/login.fxml"));
            Stage stage = (Stage) gererDemandesButton.getScene().getWindow();
            stage.setScene(new Scene(loader.load(), 800, 600));
            stage.show();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
==================================================

Fichier: src\main\java\com\example\stage\controller\AdminToutesEntreprisesController.java
Package: src\main\java\com\example\stage\controller
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\controller\AdminToutesEntreprisesController.java
-----
package com.example.stage.controller;

import com.example.stage.service.UtilisateurService;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.ListView;
import javafx.stage.Stage;

import java.io.IOException;
import java.util.List;

public class AdminToutesEntreprisesController {
    @FXML
    private ListView<String> entreprisesListView; // ListView to display all enterprises
    @FXML
    private Button retourButton; // Button to go back
    @FXML
    private Label messageLabel;

    private UtilisateurService utilisateurService = new UtilisateurService();

    // Load all enterprises when the page initializes
    @FXML
    public void initialize() {
        chargerListeEntreprises();
    }

    // Method to load all enterprises from the database
    private void chargerListeEntreprises() {
        try {
            List<String> entreprises = utilisateurService.getAllEntreprises(); // Fetch from the 'entreprises' table
            entreprisesListView.getItems().clear(); // Clear existing items
            entreprisesListView.getItems().addAll(entreprises); // Add fetched enterprises
        } catch (Exception e) {
            e.printStackTrace();
            messageLabel.setText("Erreur lors du chargement des entreprises.");
        }
    }

    // Redirect to the previous page
    @FXML
    public void retournerAAdminHome() {
        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/example/stage/admin-home.fxml"));
            Stage stage = (Stage) retourButton.getScene().getWindow(); // Get the current stage
            Scene scene = new Scene(loader.load(), 800, 600); // Load the admin home page
            stage.setScene(scene); // Set the new scene
            stage.show(); // Show the new page
        } catch (IOException e) {
            e.printStackTrace();
            messageLabel.setText("Erreur lors de la redirection vers la page d'accueil administrateur.");
        }
    }
}
==================================================

Fichier: src\main\java\com\example\stage\controller\ChercheurEmploiSignUpController.java
Package: src\main\java\com\example\stage\controller
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\controller\ChercheurEmploiSignUpController.java
-----
package com.example.stage.controller;

import com.example.stage.model.ChercheurEmploi;
import com.example.stage.service.ChercheurEmploiService;
import com.example.stage.util.BCryptUtil;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.scene.control.Label;
import javafx.scene.control.PasswordField;
import javafx.scene.control.TextField;
import javafx.stage.Stage;
import java.io.IOException;

public class ChercheurEmploiSignUpController {
    @FXML
    private TextField usernameField; // Username field
    @FXML
    private TextField emailField; // Email field
    @FXML
    private PasswordField motdepasseField; // Password field
    @FXML
    private Label messageLabel; // Message label for feedback

    private ChercheurEmploiService chercheurEmploiService = new ChercheurEmploiService();

    @FXML
    public void sInscrire() {
        String username = usernameField.getText(); // Get username
        String email = emailField.getText(); // Get email
        String motdepasse = motdepasseField.getText(); // Get password

        // Validate required fields
        if (username.isEmpty() || email.isEmpty() || motdepasse.isEmpty()) {
            messageLabel.setText("Tous les champs obligatoires ne sont pas remplis.");
            return;
        }
        if (!email.matches("^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$")) {
            messageLabel.setText("Please enter a valid email address.");
            return;
        }

        // Hash the password
        String hashedMotdepasse = BCryptUtil.hashPassword(motdepasse);

        // Create a ChercheurEmploi object with only the necessary fields
        ChercheurEmploi chercheurEmploi = new ChercheurEmploi(username, email, hashedMotdepasse, null, "chercheur_emploi");

        // Save the user to the database
        if (chercheurEmploiService.creerChercheurEmploi(chercheurEmploi)) {
            messageLabel.setText("Inscription réussie en tant que chercheur emploi !");
            redirectToHomePage(); // Redirect to the home page after successful registration
        } else {
            messageLabel.setText("Échec de l'inscription.");
        }
    }

    // Redirect to the home page
    private void redirectToHomePage() {
        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/example/stage/homechercheur.fxml"));
            Stage stage = (Stage) usernameField.getScene().getWindow();
            Scene scene = new Scene(loader.load(), 800, 600);

            // Pass the connected user to the HomeController
            HomeController homeController = loader.getController();
            homeController.setUtilisateurConnecte(new ChercheurEmploi(usernameField.getText(), emailField.getText(), null, null, "chercheur_emploi"));

            stage.setScene(scene);
            stage.show();
        } catch (IOException e) {
            e.printStackTrace();
            messageLabel.setText("Erreur lors de la redirection vers la page d'accueil.");
        }
    }
    // Redirect to the sign-up choice page
    @FXML
    public void retournerAuChoixInscription() {
        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/example/stage/sign-up-choice.fxml"));
            Stage stage = (Stage) usernameField.getScene().getWindow();
            Scene scene = new Scene(loader.load(), 800, 600);
            stage.setScene(scene);
            stage.show();
        } catch (IOException e) {
            e.printStackTrace();
            messageLabel.setText("Erreur lors de la redirection vers le choix d'inscription.");
        }
    }
}
==================================================

Fichier: src\main\java\com\example\stage\controller\CreateAdminController.java
Package: src\main\java\com\example\stage\controller
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\controller\CreateAdminController.java
-----
package com.example.stage.controller;

import com.example.stage.model.Administrateur;
import com.example.stage.service.AdministrateurService;
import com.example.stage.util.BCryptUtil;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.scene.control.Label;
import javafx.scene.control.PasswordField;
import javafx.scene.control.TextField;
import javafx.stage.Stage;

import java.io.IOException;

public class CreateAdminController {
    @FXML
    private TextField usernameField;
    @FXML
    private TextField emailField;
    @FXML
    private PasswordField motdepasseField;
    @FXML
    private TextField prenomField;
    @FXML
    private TextField nomCompletField;
    @FXML
    private Label messageLabel;

    private AdministrateurService administrateurService = new AdministrateurService();

    @FXML
    public void creerAdministrateur() {
        String username = usernameField.getText(); // Use 'username' instead of 'nom'
        String email = emailField.getText();
        String motdepasse = motdepasseField.getText();
        String prenom = prenomField.getText();
        String nomComplet = nomCompletField.getText();

        if (username.isEmpty() || email.isEmpty() || motdepasse.isEmpty() || prenom.isEmpty() || nomComplet.isEmpty()) {
            messageLabel.setText("Tous les champs sont obligatoires.");
            return;
        }

        String hashedMotdepasse = BCryptUtil.hashPassword(motdepasse);
        Administrateur administrateur = new Administrateur(username, email, hashedMotdepasse, null, prenom, nomComplet);

        if (administrateurService.creerAdministrateur(administrateur)) {
            messageLabel.setText("Administrateur créé avec succès !");
        } else {
            messageLabel.setText("Échec de la création de l'administrateur.");
        }
    }


    private void redirectToLoginPage() {
        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/example/stage/login.fxml"));
            Scene scene = new Scene(loader.load(), 800, 600);
            Stage stage = (Stage) usernameField.getScene().getWindow();
            stage.setScene(scene);
            stage.show();
        } catch (IOException e) {
            e.printStackTrace();
            messageLabel.setText("Erreur lors de la redirection vers la page de connexion.");
        }
    }
}
==================================================

Fichier: src\main\java\com\example\stage\controller\CVFormController.java
Package: src\main\java\com\example\stage\controller
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\controller\CVFormController.java
-----
package com.example.stage.controller;

import com.example.stage.model.CV;
import com.example.stage.model.Certificate;
import com.example.stage.model.Education;
import com.example.stage.model.Language;
import com.example.stage.model.Project;
import com.example.stage.model.WorkExperience;
import com.example.stage.service.CVImprovementService;
import com.example.stage.service.UserService;
import javafx.collections.FXCollections;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.Node;
import javafx.scene.control.*;
import javafx.scene.input.ScrollEvent;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;

import java.time.LocalDate;
import java.util.Collections;
import java.util.List;

public class CVFormController {

  /*  @FXML
    private TextField nameField;
    @FXML
    private TextField emailField;
    @FXML
    private TextField phoneField;
    @FXML
    private TextArea addressArea;
    @FXML
    private TextField linkedinField;
    @FXML
    private TextField portfolioField;
    @FXML
    private TextArea summaryArea;
    @FXML
    private VBox educationContainer;
    @FXML
    private VBox workExperienceContainer;
    @FXML
    private TextField skillsField;
    @FXML
    private VBox projectsContainer;
    @FXML
    private VBox certificatesContainer;
    @FXML
    private VBox languagesContainer;
    @FXML
    private ComboBox<String> templateComboBox;
    @FXML
    private ScrollPane scrollPane;
    @FXML
    private Label suggestionsLabel;

    private CV cv = new CV();
    private UserService userService = new UserService();
    private CVImprovementService cvImprovementService = new CVImprovementService();

    @FXML
    private void initialize() {
        loadUserData();
        loadCVTemplates();

        scrollPane.setFitToHeight(true);
        scrollPane.setFitToWidth(true);
        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);
        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);

        scrollPane.addEventFilter(ScrollEvent.SCROLL, event -> {
            double deltaY = event.getDeltaY() * 0.01;
            scrollPane.setVvalue(scrollPane.getVvalue() - deltaY / scrollPane.getContent().getBoundsInLocal().getHeight());
        });
    }

    private void loadUserData() {
        nameField.setText(userService.getUserName());
        emailField.setText(userService.getUserEmail());
        phoneField.setText(userService.getUserPhone());
        addressArea.setText(userService.getUserAddress());
        linkedinField.setText(userService.getUserLinkedIn());
        portfolioField.setText(userService.getUserPortfolio());
        summaryArea.setText(userService.getUserSummary());
    }

    private void loadCVTemplates() {
        templateComboBox.getItems().addAll("Template 1", "Template 2", "Template 3");
    }

    @FXML
    private void addEducation() {GridPane educationEntry = new GridPane();
        educationEntry.setHgap(5);
        educationEntry.setVgap(5);

        TextField degreeField = new TextField();
        TextField institutionField = new TextField("ESPRIM");
        DatePicker graduationDateField = new DatePicker();

        educationEntry.add(new Label("Degree:"), 0, 0);
        educationEntry.add(degreeField, 1, 0);
        educationEntry.add(new Label("Institution:"), 0, 1);
        educationEntry.add(institutionField, 1, 1);
        educationEntry.add(new Label("Graduation Date:"), 0, 2);
        educationEntry.add(graduationDateField, 1, 2);

        Button removeButton = new Button(   "Remove");
        removeButton.setOnAction(e -> {
            educationContainer.getChildren().remove(educationEntry);
        });
        educationEntry.add(removeButton, 1, 3);

        educationContainer.getChildren().add(educationEntry);

        //  Update the CV object:
        String degree = degreeField.getText();
        String institution = institutionField.getText();
        LocalDate graduationDate = graduationDateField.getValue();

        Education education = new Education(degree, institution, graduationDate);
        cv.getEducations().add(education);
    }

    @FXML
    private void addWorkExperience() {
        GridPane workExperienceEntry = new GridPane();
        workExperienceEntry.setHgap(5);
        workExperienceEntry.setVgap(5);

        TextField jobTitleField = new TextField();
        TextField companyField = new TextField();
        TextArea descriptionArea = new TextArea();

        workExperienceEntry.add(new Label("Job Title:"), 0, 0);
        workExperienceEntry.add(jobTitleField, 1, 0);
        workExperienceEntry.add(new Label("Company:"), 0, 1);
        workExperienceEntry.add(companyField, 1, 1);
        workExperienceEntry.add(new Label("Description:"), 0, 2);
        workExperienceEntry.add(descriptionArea, 1, 2);

        Button removeButton = new Button("Remove");
        removeButton.setOnAction(e -> {
            workExperienceContainer.getChildren().remove(workExperienceEntry);
        });
        workExperienceEntry.add(removeButton, 1, 3);

        workExperienceContainer.getChildren().add(workExperienceEntry);
    }

    @FXML
    private void addProject() {
        GridPane projectEntry = new GridPane();
        projectEntry.setHgap(5);
        projectEntry.setVgap(5);

        TextField projectNameField = new TextField();
        TextArea projectDescriptionArea = new TextArea();

        projectEntry.add(new Label("Project Name:"), 0, 0);
        projectEntry.add(projectNameField, 1, 0);
        projectEntry.add(new Label("Project Description:"), 0, 1);
        projectEntry.add(projectDescriptionArea, 1, 1);

        Button removeButton = new Button("Remove");
        removeButton.setOnAction(e -> {
            projectsContainer.getChildren().remove(projectEntry);
        });
        projectEntry.add(removeButton, 1, 2);

        projectsContainer.getChildren().add(projectEntry);
    }

    @FXML
    private void addCertificate() {
        GridPane certificateEntry = new GridPane();
        certificateEntry.setHgap(5);
        certificateEntry.setVgap(5);

        TextField certificateNameField = new TextField();
        TextField certificateInstitutionField = new TextField();
        DatePicker certificateDateField = new DatePicker();

        certificateEntry.add(new Label("Certificate Name:"), 0, 0);
        certificateEntry.add(certificateNameField, 1, 0);
        certificateEntry.add(new Label("Institution:"), 0, 1);
        certificateEntry.add(certificateInstitutionField, 1, 1);
        certificateEntry.add(new Label("Date of Receipt:"), 0, 2);
        certificateEntry.add(certificateDateField, 1, 2);

        Button removeButton = new Button("Remove");
        removeButton.setOnAction(e -> {
            certificatesContainer.getChildren().remove(certificateEntry);
        });
        certificateEntry.add(removeButton, 1, 3);

        certificatesContainer.getChildren().add(certificateEntry);
    }

    @FXML
    private void addLanguage() {
        GridPane languageEntry = new GridPane();
        languageEntry.setHgap(5);
        languageEntry.setVgap(5);

        TextField languageField = new TextField();
        ComboBox<String> languageProficiencyField = new ComboBox<>(FXCollections.observableArrayList("Beginner", "Intermediate", "Advanced", "Bilingual"));

        languageEntry.add(new Label("Language:"), 0, 0);
        languageEntry.add(languageField, 1, 0);
        languageEntry.add(new Label("Proficiency Level:"), 0, 1);
        languageEntry.add(languageProficiencyField, 1, 1);

        Button removeButton = new Button("Remove");
        removeButton.setOnAction(e -> {
            languagesContainer.getChildren().remove(languageEntry);
        });
        languageEntry.add(removeButton, 1, 2);

        languagesContainer.getChildren().add(languageEntry);
    }

    @FXML
    private void generateCV() {
        System.out.println("Generating CV...");

        // Gather all data from the form and update the cv object. This is crucial!
        cv.setName(nameField.getText());
        cv.setEmail(emailField.getText());
        cv.setPhone(phoneField.getText());
        cv.setAddress(addressArea.getText());
        cv.setLinkedIn(linkedinField.getText());
        cv.setPortfolio(portfolioField.getText());
        cv.setSummary(summaryArea.getText());
        cv.setSkills(Collections.singletonList(skillsField.getText())); // Add skills

        // Gather Education, Work Experience, Projects, Certificates, and Languages
        cv.getEducations().clear(); // Clear existing data before adding new ones
        for (Node node : educationContainer.getChildren()) {
            if (node instanceof GridPane) {
                GridPane gridPane = (GridPane) node;
                TextField degree = (TextField) gridPane.getChildren().get(1); // Assuming TextField is at index 1
                TextField institution = (TextField) gridPane.getChildren().get(3); // Assuming TextField is at index 3
                DatePicker graduationDate = (DatePicker) gridPane.getChildren().get(5); // Assuming DatePicker is at index 5

                if (degree != null && institution != null && graduationDate != null) {
                    cv.getEducations().add(new Education(degree.getText(), institution.getText(), graduationDate.getValue()));
                }
            }
        }

        cv.getWorkExperiences().clear();
        for (Node node : workExperienceContainer.getChildren()) {
            if (node instanceof GridPane) {
                GridPane gridPane = (GridPane) node;
                TextField jobTitle = (TextField) gridPane.getChildren().get(1);
                TextField company = (TextField) gridPane.getChildren().get(3);
                TextArea description = (TextArea) gridPane.getChildren().get(5);

                if (jobTitle != null && company != null && description != null) {
                    cv.getWorkExperiences().add(new WorkExperience(jobTitle.getText(), company.getText(), description.getText()));
                }
            }
        }

        cv.getProjects().clear();
        for (Node node : projectsContainer.getChildren()) {
            if (node instanceof GridPane) {
                GridPane gridPane = (GridPane) node;
                TextField projectName = (TextField) gridPane.getChildren().get(1);
                TextArea projectDescription = (TextArea) gridPane.getChildren().get(3);

                if (projectName != null && projectDescription != null) {
                    cv.getProjects().add(new Project(projectName.getText(), projectDescription.getText()));
                }
            }
        }

        cv.getCertificates().clear();
        for (Node node : certificatesContainer.getChildren()) {
            if (node instanceof GridPane) {
                GridPane gridPane = (GridPane) node;
                TextField certificateName = (TextField) gridPane.getChildren().get(1);
                TextField certificateInstitution = (TextField) gridPane.getChildren().get(3);
                DatePicker certificateDate = (DatePicker) gridPane.getChildren().get(5);

                if (certificateName != null && certificateInstitution != null && certificateDate != null) {
                    cv.getCertificates().add(new Certificate(certificateName.getText(), certificateInstitution.getText(), certificateDate.getValue()));
                }
            }
        }

        cv.getLanguages().clear();
        for (Node node : languagesContainer.getChildren()) {
            if (node instanceof GridPane) {
                GridPane gridPane = (GridPane) node;
                TextField language = (TextField) gridPane.getChildren().get(1);
                ComboBox<String> proficiency = (ComboBox<String>) gridPane.getChildren().get(3);

                if (language != null && proficiency != null) {
                    cv.getLanguages().add(new Language(language.getText(), proficiency.getValue()));
                }
            }
        }

        System.out.println(cv); // Now cv should have all the data

        String selectedTemplate = templateComboBox.getValue();
        if (selectedTemplate != null) {
            System.out.println("Using template: " + selectedTemplate);
            // Call your CV generation logic here, passing the 'cv' object and the selected template.
        } else {
            System.out.println("No template selected");
        }
    }

    @FXML
    private void improveCV() {
        List<String> suggestions = cvImprovementService.getSuggestions(cv);
        suggestionsLabel.setText(String.join("\n", suggestions));
    }

    @FXML
    private void handleFullScreen(ActionEvent event) {
        Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();
        stage.setFullScreen(!stage.isFullScreen());
    }*/
}
==================================================

Fichier: src\main\java\com\example\stage\controller\DatabaseAlterController.java
Package: src\main\java\com\example\stage\controller
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\controller\DatabaseAlterController.java
-----
package com.example.stage.controller;

import com.example.stage.dao.UtilisateurDAO;
import javafx.fxml.FXML;
import javafx.scene.control.Label;

public class DatabaseAlterController {

    @FXML
    private Label alterStatusLabel;

    private UtilisateurDAO utilisateurDAO = new UtilisateurDAO();

    @FXML
    public void addNewColumn() {
        String alterSQL = "ALTER TABLE utilisateurs ADD COLUMN age INT NULL";
        if (utilisateurDAO.alterTable(alterSQL)) {
            alterStatusLabel.setText("Column added successfully!");
        } else {
            alterStatusLabel.setText("Failed to add column.");
        }
    }

    @FXML
    public void modifyColumn() {
        String alterSQL = "ALTER TABLE utilisateurs MODIFY COLUMN age VARCHAR(3) NULL";
        if (utilisateurDAO.alterTable(alterSQL)) {
            alterStatusLabel.setText("Column modified successfully!");
        } else {
            alterStatusLabel.setText("Failed to modify column.");
        }
    }

    @FXML
    public void dropColumn() {
        String alterSQL = "ALTER TABLE utilisateurs DROP COLUMN age";
        if (utilisateurDAO.alterTable(alterSQL)) {
            alterStatusLabel.setText("Column dropped successfully!");
        } else {
            alterStatusLabel.setText("Failed to drop column.");
        }
    }
}
==================================================

Fichier: src\main\java\com\example\stage\controller\EditProfileController.java
Package: src\main\java\com\example\stage\controller
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\controller\EditProfileController.java
-----
package com.example.stage.controller;

import com.example.stage.dao.UtilisateurDAO;
import com.example.stage.model.ChercheurEmploi;
import com.example.stage.model.Utilisateur;
import javafx.fxml.FXML;
import javafx.scene.control.PasswordField;
import javafx.scene.control.TextField;

public class EditProfileController {

    @FXML
    private TextField usernameField;

    @FXML
    private TextField emailField;

    @FXML
    private PasswordField passwordField;

    @FXML
    private TextField diplomesField;

    private ChercheurEmploi utilisateur;

    public void setUtilisateur(Utilisateur utilisateur) {
        if (utilisateur instanceof ChercheurEmploi) {
            this.utilisateur = (ChercheurEmploi) utilisateur;
            usernameField.setText(this.utilisateur.getUsername());
            emailField.setText(this.utilisateur.getEmail());
            passwordField.setText(this.utilisateur.getMotdepasse());
            diplomesField.setText(this.utilisateur.getDiplomes());
        }
    }



    @FXML
    private void handleSaveProfile() {
        // Mettre à jour les informations de l'utilisateur
        utilisateur.setUsername(usernameField.getText());
        utilisateur.setEmail(emailField.getText());
        utilisateur.setMotdepasse(passwordField.getText());
        utilisateur.setDiplomes(diplomesField.getText());

        UtilisateurDAO utilisateurDAO = new UtilisateurDAO();

        // Appeler la méthode appropriée en fonction du type de l'utilisateur
        boolean isUpdated = false;
        if (utilisateur instanceof ChercheurEmploi) {
            isUpdated = utilisateurDAO.mettreAJourUtilisateur((ChercheurEmploi) utilisateur);
        } else {
            isUpdated = utilisateurDAO.mettreAJourUtilisateur(utilisateur);
        }

        if (isUpdated) {
            System.out.println("Profil mis à jour avec succès !");
        } else {
            System.out.println("Erreur lors de la mise à jour du profil.");
        }

        // Retourner à la page d'accueil ou fermer la fenêtre
        handleCancel();
    }


    @FXML
    private void handleCancel() {
        // Fermer la fenêtre ou retourner à la page d'accueil
        usernameField.getScene().getWindow().hide();
    }
}
==================================================

Fichier: src\main\java\com\example\stage\controller\entreprisehome.java
Package: src\main\java\com\example\stage\controller
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\controller\entreprisehome.java
-----
package com.example.stage.controller;

import javafx.fxml.FXML;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;

public class entreprisehome {

    @FXML
    private Label bienvenueLabel;

    @FXML
    private TextField nameField;

    @FXML
    private TextField surnameField;

    @FXML
    private TextField emailField;

    @FXML
    private TextField phoneField;

    @FXML
    private TextField addressField;

    @FXML
    private Button changeThemeButton;

    @FXML
    private Button editProfileButton;

    @FXML
    private Button demandetButton;

    @FXML
    private Button recrutementButton;

    @FXML
    private Button logoutButton;

    @FXML
    private void handleChangeTheme() {
        // Logique pour changer le thème
        System.out.println("Changer le thème");
    }

    @FXML
    private void handleEditProfile() {
        // Logique pour modifier le profil
        System.out.println("Modifier le profil");
    }

    @FXML
    private void handledemande() {
        // Logique pour gérer les demandes
        System.out.println("Gérer les demandes");
    }

    @FXML
    private void handlerecrutement() {
        // Logique pour ajouter un recrutement
        System.out.println("Ajouter un recrutement");
    }

    @FXML
    private void handleLogout() {
        // Logique pour se déconnecter
        System.out.println("Déconnexion");
    }
}
==================================================

Fichier: src\main\java\com\example\stage\controller\EntrepriseSignUpController.java
Package: src\main\java\com\example\stage\controller
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\controller\EntrepriseSignUpController.java
-----
package com.example.stage.controller;

import com.example.stage.model.Entreprise;
import com.example.stage.service.EntrepriseService;
import com.example.stage.util.BCryptUtil;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.scene.control.Label;
import javafx.scene.control.PasswordField;
import javafx.scene.control.TextField;
import javafx.stage.Stage;

import java.io.IOException;

public class EntrepriseSignUpController {
    @FXML
    private TextField usernameField; // Updated field name
    @FXML
    private TextField emailField;
    @FXML
    private PasswordField motdepasseField;
    @FXML
    private TextField nomEntrepriseField;
    @FXML
    private TextField secteurActiviteField;
    @FXML
    private TextField adresseField;
    @FXML
    private TextField siteWebField;
    @FXML
    private TextField descriptionField;
    @FXML
    private Label messageLabel;

    private EntrepriseService entrepriseService = new EntrepriseService();

    @FXML
    public void sInscrire() {
        String username = usernameField.getText(); // Use 'username' instead of 'nom'
        String email = emailField.getText();
        String motdepasse = motdepasseField.getText();
        String nomEntreprise = nomEntrepriseField.getText();
        String secteurActivite = secteurActiviteField.getText();
        String adresse = adresseField.getText();
        String siteWeb = siteWebField.getText();
        String description = descriptionField.getText();

        // Validate required fields
        if (username.isEmpty() || email.isEmpty() || motdepasse.isEmpty() || nomEntreprise.isEmpty()) {
            messageLabel.setText("Tous les champs obligatoires ne sont pas remplis.");
            return;
        }

        // Hash the password
        String hashedMotdepasse = BCryptUtil.hashPassword(motdepasse);

        // Create the enterprise object
        Entreprise entreprise = new Entreprise(username, email, hashedMotdepasse, null, nomEntreprise, secteurActivite, adresse, siteWeb, description, null); // Set logo to null

        // Save the enterprise to the database
        if (entrepriseService.creerEntrepriseEnAttente(entreprise)) {
            messageLabel.setText("Votre compte entreprise est en attente de validation par un administrateur.");
        } else {
            messageLabel.setText("Échec de l'inscription.");
        }
    }
    /**
     * Redirects the user back to the sign-up choice page.
     */
    @FXML
    public void retournerAuChoixInscription() {
        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/example/stage/sign-up-choice.fxml"));
            Stage stage = (Stage) usernameField.getScene().getWindow(); // Get the current stage
            Scene scene = new Scene(loader.load(), 800, 600); // Load the sign-up choice page
            stage.setScene(scene); // Set the new scene
            stage.show(); // Show the new page
        } catch (IOException e) {
            e.printStackTrace();
            messageLabel.setText("Erreur lors de la redirection vers le choix d'inscription.");
        }
    }
}
==================================================

Fichier: src\main\java\com\example\stage\controller\FirstPageController.java
Package: src\main\java\com\example\stage\controller
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\controller\FirstPageController.java
-----
package com.example.stage.controller;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.stage.Stage;
import java.io.IOException;

public class FirstPageController {
    @FXML
    private Button loginButton;
    @FXML
    private Button signUpButton;

    // Redirect to the login page
    @FXML
    public void redirectToLoginPage() {
        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/example/stage/login.fxml"));
            Stage stage = (Stage) loginButton.getScene().getWindow();
            stage.setScene(new Scene(loader.load(), 800, 600));
            stage.show();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    // Redirect to the sign-up choice page
    @FXML
    public void redirectToSignUpChoicePage() {
        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/example/stage/sign-up-choice.fxml"));
            Stage stage = (Stage) signUpButton.getScene().getWindow();
            stage.setScene(new Scene(loader.load(), 800, 600));
            stage.show();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
==================================================

Fichier: src\main\java\com\example\stage\controller\HomeChercheurController.java
Package: src\main\java\com\example\stage\controller
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\controller\HomeChercheurController.java
-----
package com.example.stage.controller;


import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.TextField;
import javafx.scene.layout.BorderPane;
import javafx.stage.Stage;

import java.io.IOException;

public class HomeChercheurController {

    @FXML
    private Button editProfileButton;

    @FXML
    private Button createCVButton;

    @FXML
    private Button interviewButton;

    @FXML
    private Button communicationButton;

    @FXML
    private Button logoutButton;

    @FXML
    private Button changeThemeButton;

    @FXML
    private BorderPane mainPane;

    // Ajoutez ces champs pour les utiliser dans initializeData
    @FXML
    private TextField nameField;

    @FXML
    private TextField surnameField;

    @FXML
    private TextField emailField;

    @FXML
    private TextField phoneField;

    @FXML
    private TextField addressField;

    @FXML
    private void handleEditProfile() {
        try {
            // Charger la page de modification de profil
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/example/stage/editprofile.fxml"));
            Parent editProfilePage = loader.load();

            // Récupérer le contrôleur de la page de modification de profil
            //EditProfileController editProfileController = loader.getController();



            // Créer la scène
            Scene editProfileScene = new Scene(editProfilePage, 800, 600);

            // Récupérer la fenêtre actuelle
            Stage currentStage = (Stage) editProfileButton.getScene().getWindow();

            // Changer la scène
            currentStage.setScene(editProfileScene);
        } catch (IOException e) {
            e.printStackTrace();
            System.err.println("Erreur lors du chargement de la page de modification de profil : " + e.getMessage());
        }
    }


    @FXML
    private void handleCreateCV() {
        System.out.println("Créer CV button clicked");
        // Ajoutez votre logique ici
    }

    @FXML
    private void handleInterview() {
        System.out.println("Entretien button clicked");
        // Ajoutez votre logique ici
    }

    @FXML
    private void handleCommunication() {
        System.out.println("Communication button clicked");
        // Ajoutez votre logique ici
    }

    @FXML
    private void handleLogout() {
        try {
            // Charger la page d'inscription
            Parent signUpPage = FXMLLoader.load(getClass().getResource("/com/example/stage/first-page.fxml"));
            Scene signUpScene = new Scene(signUpPage, 800, 600);

            // Récupérer la fenêtre actuelle
            Stage currentStage = (Stage) logoutButton.getScene().getWindow();

            // Changer la scène
            currentStage.setScene(signUpScene);
        } catch (IOException e) {
            e.printStackTrace();
            System.err.println("Erreur lors du chargement de la page d'inscription : " + e.getMessage());
        }
    }

    @FXML
    private void handleChangeTheme() {
        System.out.println("Changer Thème button clicked");
        // Exemple de changement de thème
        mainPane.setStyle("-fx-background-color: #333333;");
        editProfileButton.setStyle("-fx-background-color: #555555; -fx-text-fill: white;");
        createCVButton.setStyle("-fx-background-color: #555555; -fx-text-fill: white;");
        interviewButton.setStyle("-fx-background-color: #555555; -fx-text-fill: white;");
        communicationButton.setStyle("-fx-background-color: #555555; -fx-text-fill: white;");
        logoutButton.setStyle("-fx-background-color: #555555; -fx-text-fill: white;");
    }
}
==================================================

Fichier: src\main\java\com\example\stage\controller\HomeController.java
Package: src\main\java\com\example\stage\controller
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\controller\HomeController.java
-----
package com.example.stage.controller;

import com.example.stage.model.Utilisateur;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.layout.BorderPane;
import javafx.stage.Stage;

import java.io.IOException;

public class HomeController {

    @FXML
    private Button editProfileButton;

    @FXML
    private Button createCVButton;

    @FXML
    private Button interviewButton;

    @FXML
    private Button communicationButton;

    @FXML
    private Button logoutButton;
    @FXML
    private Utilisateur utilisateurConnecte;


    @FXML
    private Button changeThemeButton;

    @FXML
    private BorderPane mainPane;

    @FXML
    private Label bienvenueLabel; // Label pour afficher le message de bienvenue

    @FXML
    private TextField nameField;

    @FXML
    private TextField surnameField;

    @FXML
    private TextField emailField;

    @FXML
    private TextField phoneField;

    @FXML
    private TextField addressField;

    // Méthode pour définir l'utilisateur connecté et afficher le message de bienvenue
    public void setUtilisateurConnecte(Utilisateur utilisateur) {
        if (utilisateur != null) {
            // Affiche "Bienvenue, [Username]"
            bienvenueLabel.setText("Bienvenue, " + utilisateur.getUsername() + " !");
        } else {
            bienvenueLabel.setText("Bienvenue !");
        }
    }


    @FXML
    private void handleEditProfile() {
        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/example/stage/editprofile.fxml"));
            Parent editProfilePage = loader.load();

            // Récupérer le contrôleur et passer les informations de l'utilisateur connecté
            EditProfileController editProfileController = loader.getController();
            editProfileController.setUtilisateur(utilisateurConnecte);

            Scene editProfileScene = new Scene(editProfilePage, 800, 600);
            Stage currentStage = (Stage) editProfileButton.getScene().getWindow();
            currentStage.setScene(editProfileScene);
        } catch (IOException e) {
            e.printStackTrace();
            System.err.println("Erreur lors du chargement de la page de modification de profil : " + e.getMessage());
        }
    }


    @FXML
    private void handleCreateCV() {
        System.out.println("Créer CV button clicked");
        // Ajoutez votre logique ici
    }

    @FXML
    private void handleInterview() {
        System.out.println("Entretien button clicked");
        // Ajoutez votre logique ici
    }

    @FXML
    private void handleCommunication() {
        System.out.println("Communication button clicked");
        // Ajoutez votre logique ici
    }

    @FXML
    private void handleLogout() {
        try {
            // Charger la page d'inscription
            Parent signUpPage = FXMLLoader.load(getClass().getResource("/com/example/stage/first-page.fxml"));
            Scene signUpScene = new Scene(signUpPage, 800, 600);

            // Récupérer la fenêtre actuelle
            Stage currentStage = (Stage) logoutButton.getScene().getWindow();

            // Changer la scène
            currentStage.setScene(signUpScene);
        } catch (IOException e) {
            e.printStackTrace();
            System.err.println("Erreur lors du chargement de la page d'inscription : " + e.getMessage());
        }
    }

    @FXML
    private void handleChangeTheme() {
        System.out.println("Changer Thème button clicked");
        // Exemple de changement de thème
        mainPane.setStyle("-fx-background-color: #333333;");
        editProfileButton.setStyle("-fx-background-color: #555555; -fx-text-fill: white;");
        createCVButton.setStyle("-fx-background-color: #555555; -fx-text-fill: white;");
        interviewButton.setStyle("-fx-background-color: #555555; -fx-text-fill: white;");
        communicationButton.setStyle("-fx-background-color: #555555; -fx-text-fill: white;");
        logoutButton.setStyle("-fx-background-color: #555555; -fx-text-fill: white;");
    }
}
==================================================

Fichier: src\main\java\com\example\stage\controller\LoginController.java
Package: src\main\java\com\example\stage\controller
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\controller\LoginController.java
-----
package com.example.stage.controller;

import com.example.stage.model.Utilisateur;
import com.example.stage.service.UtilisateurService;
import com.example.stage.util.BCryptUtil; // Ajoutez cette importation
import javafx.application.Platform;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.scene.control.Hyperlink;
import javafx.scene.control.TextField;
import javafx.scene.control.PasswordField;
import javafx.scene.control.Label;
import javafx.stage.Stage;
import java.io.IOException;

public class LoginController {
    @FXML
    private TextField emailField;
    @FXML
    private PasswordField motdepasseField;
    @FXML
    private Label messageLabel;
    @FXML
    private Hyperlink inscriptionLink;

    private UtilisateurService utilisateurService = new UtilisateurService();

    /**
     * Called when the FXML file is loaded.
     * Checks if an admin exists and redirects to the create-admin page if not.
     */
    @FXML
    private void initialize() {
        // Check if any admin exists in the database
        if (!utilisateurService.existsAdmin()) {
            // Schedule the redirection after the FXML is fully loaded
            Platform.runLater(this::redirectToCreateAdminPage);
        }
    }

    /**
     * Redirects to the create-admin page if no admin exists.
     */
    private void redirectToCreateAdminPage() {
        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/example/stage/create-admin.fxml"));
            Scene scene = new Scene(loader.load(), 800, 600);

            // Get the current stage from the emailField's scene (if available)
            Stage stage;
            if (emailField != null && emailField.getScene() != null) {
                stage = (Stage) emailField.getScene().getWindow();
            } else {
                // Fallback: Create a new stage if no scene is available yet
                stage = new Stage();
            }

            stage.setScene(scene);
            stage.show();
        } catch (IOException e) {
            e.printStackTrace();
            messageLabel.setText("Erreur lors de la redirection vers la page de création d'admin.");
        }
    }

    /**
     * Handles the login process when the "Se Connecter" button is clicked.
     */
    @FXML
    public void seConnecter() {
        String email = emailField.getText();
        String motdepasse = motdepasseField.getText();

        // Validate required fields
        if (email.isEmpty() || motdepasse.isEmpty()) {
            messageLabel.setText("Tous les champs sont obligatoires.");
            return;
        }

        // Retrieve user by email
        Utilisateur utilisateur = utilisateurService.getUtilisateurByEmail(email);
        if (utilisateur != null && BCryptUtil.checkPassword(motdepasse, utilisateur.getMotdepasse())) {
            switch (utilisateur.getRole()) {
                case "administrateur":
                    redirectToAdminHomePage(); // Redirect to admin home page
                    break;
                case "chercheur_emploi":
                    redirectToHomePage(utilisateur); // Redirect to seeker home page
                    break;
                case "entreprise":
                    redirectToHomePage(utilisateur); // Redirect to enterprise home page
                    break;
                default:
                    messageLabel.setText("Rôle invalide.");
            }
        } else {
            messageLabel.setText("Email ou mot de passe incorrect.");
        }
    }

    /**
     * Redirects to the admin home page.
     */
    private void redirectToAdminHomePage() {
        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/example/stage/admin-home.fxml"));
            Stage stage = (Stage) emailField.getScene().getWindow();
            stage.setScene(new Scene(loader.load(), 800, 600));
            stage.show();
        } catch (IOException e) {
            e.printStackTrace();
            messageLabel.setText("Erreur lors de la redirection vers la page d'accueil admin.");
        }
    }

    /**
     * Redirects to the home page for job seekers or enterprises.
     *
     * @param utilisateur The connected user.
     */
    private void redirectToHomePage(Utilisateur utilisateur) {
        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/example/stage/home.fxml"));
            Stage stage = (Stage) emailField.getScene().getWindow();
            stage.setScene(new Scene(loader.load(), 800, 600));
            stage.show();

            // Pass the connected user to the HomeController
            HomeController homeController = loader.getController();
            homeController.setUtilisateurConnecte(utilisateur);
        } catch (IOException e) {
            e.printStackTrace();
            messageLabel.setText("Erreur lors de la redirection vers la page d'accueil.");
        }
    }

    /**
     * Redirects to the sign-up choice page when the "S'inscrire" link is clicked.
     */
    public void allerVersInscription() {
        try {
            // Load the sign-up-choice.fxml file
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/example/stage/sign-up-choice.fxml"));
            Stage stage = (Stage) inscriptionLink.getScene().getWindow(); // Get the current stage
            stage.setScene(new Scene(loader.load(), 800, 600)); // Set the new scene
            stage.show(); // Display the new scene
        } catch (IOException e) {
            e.printStackTrace();
            messageLabel.setText("Erreur lors de la redirection vers la page d'inscription.");
        }
    }
}
==================================================

Fichier: src\main\java\com\example\stage\controller\Page1Controller.java
Package: src\main\java\com\example\stage\controller
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\controller\Page1Controller.java
-----
package com.example.stage.controller;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.AnchorPane;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;

import java.io.IOException;
import java.io.InputStreamReader;
import java.nio.charset.StandardCharsets;
import java.time.LocalDate;
import java.util.Locale;
import java.util.PropertyResourceBundle;
import java.util.ResourceBundle;

public class Page1Controller {
    // Personal Information Fields
    @FXML private TextField nameField;
    @FXML private TextField emailField;
    @FXML private TextField phoneField;
    @FXML private TextArea addressArea;
    @FXML private TextField linkedinField;
    @FXML private TextField portfolioField;
    @FXML private TextArea summaryArea;

    // Education Fields
    @FXML private TextField degreeField;
    @FXML private TextField institutionField;
    @FXML private DatePicker graduationDateField;
    @FXML private VBox educationContainer;

    // Work Experience Fields
    @FXML private TextField jobTitleField;
    @FXML private TextField companyField;
    @FXML private TextArea descriptionArea;
    @FXML private VBox workExperienceContainer;

    // UI Control Elements
    @FXML private ComboBox<String> languageComboBox;
    @FXML private Button translateButton;
    @FXML private Button addEducationButton;
    @FXML private Button addWorkExperienceButton;
    @FXML private Button autoFillButton;
    @FXML private Button nextButton;

    // Labels for translation
    @FXML private Label personalInformationLabel;
    @FXML private Label fullNameLabel;
    @FXML private Label emailLabel;
    @FXML private Label phoneLabel;
    @FXML private Label addressLabel;
    @FXML private Label linkedinLabel;
    @FXML private Label portfolioLabel;
    @FXML private Label summaryObjectiveLabel;
    @FXML private Label educationLabel;
    @FXML private Label workExperienceLabel;

    @FXML
    private void initialize() {
        languageComboBox.getItems().addAll("English", "French", "German", "Arabic");
        languageComboBox.setOnAction(e -> translatePage());
        loadTranslations(Locale.ENGLISH);
        setupInitialValues();
    }

    private void setupInitialValues() {
        // Set default values if needed
        nameField.setText("Mohamed Abidi");
        emailField.setText("mohamed.abidi@example.com");
        phoneField.setText("+21612345678");
        addressArea.setText("123 Rue de Tunis, Tunis, Tunisia");
        linkedinField.setText("linkedin.com/in/mohamedabidi");
        portfolioField.setText("mohamedabidi.com");
        summaryArea.setText("Experienced software engineer with a strong background in developing scalable web applications.");
    }

    @FXML
    private void translatePage() {
        String selectedLanguage = languageComboBox.getValue();
        Locale locale = switch (selectedLanguage) {
            case "French" -> Locale.FRENCH;
            case "German" -> Locale.GERMAN;
            case "Arabic" -> new Locale("ar");
            default -> Locale.ENGLISH;
        };
        loadTranslations(locale);
    }

    private void loadTranslations(Locale locale) {
        ResourceBundle bundle = getBundle("messages", locale);
        if (bundle != null) {
            personalInformationLabel.setText(bundle.getString("personal_information"));
            fullNameLabel.setText(bundle.getString("full_name"));
            emailLabel.setText(bundle.getString("email"));
            phoneLabel.setText(bundle.getString("phone"));
            addressLabel.setText(bundle.getString("address"));
            linkedinLabel.setText(bundle.getString("linkedin"));
            portfolioLabel.setText(bundle.getString("portfolio"));
            summaryObjectiveLabel.setText(bundle.getString("summary_objective"));
            educationLabel.setText(bundle.getString("education"));
            workExperienceLabel.setText(bundle.getString("work_experience"));
            addEducationButton.setText(bundle.getString("add_education"));
            addWorkExperienceButton.setText(bundle.getString("add_experience"));
            nextButton.setText(bundle.getString("next"));
            translateButton.setText(bundle.getString("translate"));
            autoFillButton.setText(bundle.getString("auto_fill"));
        }
    }

    @FXML
    private void addEducation() {
        GridPane educationEntry = new GridPane();
        educationEntry.setHgap(10);
        educationEntry.setVgap(10);

        TextField degreeField = new TextField(this.degreeField.getText());
        TextField institutionField = new TextField(this.institutionField.getText());
        DatePicker graduationDateField = new DatePicker(this.graduationDateField.getValue());

        educationEntry.add(new Label("Degree:"), 0, 0);
        educationEntry.add(degreeField, 1, 0);
        educationEntry.add(new Label("Institution:"), 0, 1);
        educationEntry.add(institutionField, 1, 1);
        educationEntry.add(new Label("Graduation Date:"), 0, 2);
        educationEntry.add(graduationDateField, 1, 2);

        Button removeButton = new Button("Remove");
        removeButton.setStyle("-fx-background-color: #E31A22; -fx-text-fill: white;");
        removeButton.setOnAction(e -> educationContainer.getChildren().remove(educationEntry));
        educationEntry.add(removeButton, 1, 3);

        educationContainer.getChildren().add(educationEntry);
        clearEducationFields();
    }

    @FXML
    private void addWorkExperience() {
        GridPane workExperienceEntry = new GridPane();
        workExperienceEntry.setHgap(10);
        workExperienceEntry.setVgap(10);

        TextField jobTitleField = new TextField(this.jobTitleField.getText());
        TextField companyField = new TextField(this.companyField.getText());
        TextArea descriptionArea = new TextArea(this.descriptionArea.getText());
        descriptionArea.setPrefHeight(60);
        descriptionArea.setWrapText(true);

        workExperienceEntry.add(new Label("Job Title:"), 0, 0);
        workExperienceEntry.add(jobTitleField, 1, 0);
        workExperienceEntry.add(new Label("Company:"), 0, 1);
        workExperienceEntry.add(companyField, 1, 1);
        workExperienceEntry.add(new Label("Description:"), 0, 2);
        workExperienceEntry.add(descriptionArea, 1, 2);

        Button removeButton = new Button("Remove");
        removeButton.setStyle("-fx-background-color: #E31A22; -fx-text-fill: white;");
        removeButton.setOnAction(e -> workExperienceContainer.getChildren().remove(workExperienceEntry));
        workExperienceEntry.add(removeButton, 1, 3);

        workExperienceContainer.getChildren().add(workExperienceEntry);
        clearWorkExperienceFields();
    }

    @FXML
    private void autoFillForm() {
        // Personal Information
        nameField.setText("Mohamed Abidi");
        emailField.setText("mohamed.abidi@example.com");
        phoneField.setText("+21612345678");
        addressArea.setText("123 Rue de Tunis, Tunis, Tunisia");
        linkedinField.setText("linkedin.com/in/mohamedabidi");
        portfolioField.setText("mohamedabidi.com");
        summaryArea.setText("Experienced software engineer with a strong background in developing scalable web applications.");

        // Add example education entries
        educationContainer.getChildren().clear();
        for (int i = 1; i <= 2; i++) {
            this.degreeField.setText("Computer Science Degree " + i);
            this.institutionField.setText("ESPRIM");
            this.graduationDateField.setValue(LocalDate.now().minusYears(i));
            addEducation();
        }

        // Add example work experiences
        workExperienceContainer.getChildren().clear();
        for (int i = 1; i <= 2; i++) {
            this.jobTitleField.setText("Software Engineer " + i);
            this.companyField.setText("Tech Company " + i);
            this.descriptionArea.setText("Led development of key features and maintained core systems.");
            addWorkExperience();
        }
    }

    @FXML
    private void showSummaryHelp() {
        showAlert("Summary Help",
                "Please provide a brief professional summary highlighting your key qualifications and career objectives.");
    }

    @FXML
    private void goToPage2() {
        try {
            Stage stage = (Stage) nextButton.getScene().getWindow();
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/example/stage/page2.fxml"));
            AnchorPane page2 = loader.load();
            stage.setScene(new Scene(page2, 900, 600));
        } catch (IOException e) {
            showAlert("Error", "Could not load the next page.");
            e.printStackTrace();
        }
    }

    private ResourceBundle getBundle(String baseName, Locale locale) {
        String resourceName = baseName + "_" + locale.getLanguage() + ".properties";
        String resourcePath = "/com/example/stage/" + resourceName;
        try (InputStreamReader reader = new InputStreamReader(
                getClass().getResourceAsStream(resourcePath),
                StandardCharsets.UTF_8)) {
            return reader != null ? new PropertyResourceBundle(reader) : null;
        } catch (IOException e) {
            e.printStackTrace();
            return null;
        }
    }

    private void clearEducationFields() {
        degreeField.clear();
        institutionField.clear();
        graduationDateField.setValue(null);
    }

    private void clearWorkExperienceFields() {
        jobTitleField.clear();
        companyField.clear();
        descriptionArea.clear();
    }

    private void showAlert(String title, String content) {
        Alert alert = new Alert(Alert.AlertType.INFORMATION);
        alert.setTitle(title);
        alert.setHeaderText(null);
        alert.setContentText(content);
        alert.showAndWait();
    }
}
==================================================

Fichier: src\main\java\com\example\stage\controller\Page2Controller.java
Package: src\main\java\com\example\stage\controller
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\controller\Page2Controller.java
-----
package com.example.stage.controller;

import com.example.stage.model.*;
import com.example.stage.service.CVImprovementService;
import com.example.stage.service.PDFGenerationService;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.*;
import javafx.stage.Stage;

import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.nio.charset.StandardCharsets;
import java.util.*;

public class Page2Controller {
    @FXML private TextField skillsField;
    @FXML private VBox projectsContainer;
    @FXML private VBox certificatesContainer;
    @FXML private VBox languagesContainer;

    @FXML private TextField projectNameField;
    @FXML private TextArea projectDescriptionArea;
    @FXML private TextField certificateNameField;
    @FXML private TextField certificateInstitutionField;
    @FXML private DatePicker certificateDateField;
    @FXML private TextField languageField;
    @FXML private ComboBox<String> languageProficiencyField;

    @FXML private Button backButton;
    @FXML private ComboBox<String> languageComboBox;
    @FXML private Button translateButton;
    @FXML private Button generatePDFButton;
    @FXML private Button autoFillButton;

    @FXML private Label skillsLabel;
    @FXML private Label projectsLabel;
    @FXML private Label certificatesLabel;
    @FXML private Label languagesLabel;

    private final PDFGenerationService pdfGenerationService;

    public Page2Controller() {
        this.pdfGenerationService = new PDFGenerationService();
    }

    @FXML
    private void initialize() {
        languageComboBox.getItems().addAll("English", "French", "German", "Arabic");
        languageComboBox.setOnAction(e -> translatePage());
        loadTranslations(Locale.ENGLISH);
        setupLanguageProficiencyField();
    }

    private void setupLanguageProficiencyField() {
        languageProficiencyField.getItems().addAll(
                "A1 (Beginner)",
                "A2 (Elementary)",
                "B1 (Intermediate)",
                "B2 (Upper Intermediate)",
                "C1 (Advanced)",
                "C2 (Bilingual)"
        );
    }

    @FXML
    private void addProject() {
        if (projectNameField.getText().isEmpty() || projectDescriptionArea.getText().isEmpty()) {
            showAlert(Alert.AlertType.WARNING, "Warning", "Please fill in all project fields");
            return;
        }

        GridPane projectEntry = new GridPane();
        projectEntry.setHgap(5);
        projectEntry.setVgap(5);

        Label nameLabel = new Label(projectNameField.getText());
        TextArea descArea = new TextArea(projectDescriptionArea.getText());
        descArea.setWrapText(true);
        descArea.setPrefRowCount(2);
        descArea.setEditable(false);

        projectEntry.add(new Label("Project:"), 0, 0);
        projectEntry.add(nameLabel, 1, 0);
        projectEntry.add(new Label("Description:"), 0, 1);
        projectEntry.add(descArea, 1, 1);

        Button removeButton = createRemoveButton(projectEntry);
        projectEntry.add(removeButton, 1, 2);

        projectsContainer.getChildren().add(projectEntry);
        clearProjectFields();
    }

    @FXML
    private void addCertificate() {
        if (certificateNameField.getText().isEmpty() ||
                certificateInstitutionField.getText().isEmpty() ||
                certificateDateField.getValue() == null) {
            showAlert(Alert.AlertType.WARNING, "Warning", "Please fill in all certificate fields");
            return;
        }

        GridPane certificateEntry = new GridPane();
        certificateEntry.setHgap(5);
        certificateEntry.setVgap(5);

        Label nameLabel = new Label(certificateNameField.getText());
        Label institutionLabel = new Label(certificateInstitutionField.getText());
        Label dateLabel = new Label(certificateDateField.getValue().toString());

        certificateEntry.add(new Label("Certificate:"), 0, 0);
        certificateEntry.add(nameLabel, 1, 0);
        certificateEntry.add(new Label("Institution:"), 0, 1);
        certificateEntry.add(institutionLabel, 1, 1);
        certificateEntry.add(new Label("Date:"), 0, 2);
        certificateEntry.add(dateLabel, 1, 2);

        Button removeButton = createRemoveButton(certificateEntry);
        certificateEntry.add(removeButton, 1, 3);

        certificatesContainer.getChildren().add(certificateEntry);
        clearCertificateFields();
    }

    @FXML
    private void addLanguage() {
        if (languageField.getText().isEmpty() || languageProficiencyField.getValue() == null) {
            showAlert(Alert.AlertType.WARNING, "Warning", "Please fill in all language fields");
            return;
        }

        GridPane languageEntry = new GridPane();
        languageEntry.setHgap(5);
        languageEntry.setVgap(5);

        Label langLabel = new Label(languageField.getText());
        Label profLabel = new Label(languageProficiencyField.getValue());

        languageEntry.add(new Label("Language:"), 0, 0);
        languageEntry.add(langLabel, 1, 0);
        languageEntry.add(new Label("Level:"), 0, 1);
        languageEntry.add(profLabel, 1, 1);

        Button removeButton = createRemoveButton(languageEntry);
        languageEntry.add(removeButton, 1, 2);

        languagesContainer.getChildren().add(languageEntry);
        clearLanguageFields();
    }

    @FXML
    private void generatePDF() {
        try {
            CV cv = buildCVFromForm();
            File outputDir = new File("src/output");
            if (!outputDir.exists()) {
                outputDir.mkdirs();
            }
            String filePath = "src/output/cv.pdf";
            pdfGenerationService.generateCVPDF(cv, filePath);
            showAlert(Alert.AlertType.INFORMATION, "Success",
                    "CV has been generated successfully: " + filePath);
        } catch (IOException e) {
            showAlert(Alert.AlertType.ERROR, "Error",
                    "An error occurred while generating the CV");
            e.printStackTrace();
        }
    }

    @FXML
    private void goToPage1() {
        try {
            Stage stage = (Stage) backButton.getScene().getWindow();
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/example/stage/page1.fxml"));
            AnchorPane page1 = loader.load();
            stage.setScene(new Scene(page1, 900, 600));
        } catch (IOException e) {
            e.printStackTrace();
            showAlert(Alert.AlertType.ERROR, "Error", "Could not return to previous page");
        }
    }

    @FXML
    private void translatePage() {
        String selectedLanguage = languageComboBox.getValue();
        Locale locale = switch (selectedLanguage) {
            case "French" -> Locale.FRENCH;
            case "German" -> Locale.GERMAN;
            case "Arabic" -> new Locale("ar");
            default -> Locale.ENGLISH;
        };
        loadTranslations(locale);
    }

    @FXML
    private void showSkillsHelp() {
        showAlert(Alert.AlertType.INFORMATION, "Skills Help",
                "Enter your skills separated by commas (e.g., Java, Python, Leadership)");
    }

    @FXML
    private void showProjectHelp() {
        showAlert(Alert.AlertType.INFORMATION, "Project Help",
                "Describe your project, its objectives, and your role in it");
    }

    @FXML
    private void autoFillForm() {
        skillsField.setText("Java, Spring Boot, JavaFX, Git, Agile Methodology");

        // Add example project
        projectNameField.setText("CV Generator Application");
        projectDescriptionArea.setText("Developed a JavaFX application for creating and managing CVs with PDF export capability");
        addProject();

        // Add example certificate
        certificateNameField.setText("Java Professional Certification");
        certificateInstitutionField.setText("Oracle");
        certificateDateField.setValue(java.time.LocalDate.now());
        addCertificate();

        // Add example languages
        languageField.setText("French");
        languageProficiencyField.setValue("C2 (Bilingual)");
        addLanguage();

        languageField.setText("English");
        languageProficiencyField.setValue("C1 (Advanced)");
        addLanguage();
    }

    private void loadTranslations(Locale locale) {
        ResourceBundle bundle = getBundle("messages", locale);
        if (bundle != null) {
            skillsLabel.setText(bundle.getString("skills"));
            projectsLabel.setText(bundle.getString("projects"));
            certificatesLabel.setText(bundle.getString("certificates"));
            languagesLabel.setText(bundle.getString("languages"));
            backButton.setText(bundle.getString("back"));
            translateButton.setText(bundle.getString("translate"));
            generatePDFButton.setText(bundle.getString("generate_pdf"));
            autoFillButton.setText(bundle.getString("auto_fill"));
        }
    }

    private ResourceBundle getBundle(String baseName, Locale locale) {
        String resourceName = baseName + "_" + locale.getLanguage() + ".properties";
        String resourcePath = "/com/example/stage/" + resourceName;
        try (InputStreamReader reader = new InputStreamReader(
                getClass().getResourceAsStream(resourcePath),
                StandardCharsets.UTF_8)) {
            return reader != null ? new PropertyResourceBundle(reader) : null;
        } catch (IOException e) {
            e.printStackTrace();
            return null;
        }
    }

    private void clearProjectFields() {
        projectNameField.clear();
        projectDescriptionArea.clear();
    }

    private void clearCertificateFields() {
        certificateNameField.clear();
        certificateInstitutionField.clear();
        certificateDateField.setValue(null);
    }

    private void clearLanguageFields() {
        languageField.clear();
        languageProficiencyField.setValue(null);
    }

    private Button createRemoveButton(GridPane entry) {
        Button removeButton = new Button("Remove");
        removeButton.setStyle("-fx-background-color: #E31A22; -fx-text-fill: white;");
        removeButton.setOnAction(e -> ((VBox) entry.getParent()).getChildren().remove(entry));
        return removeButton;
    }

    private void showAlert(Alert.AlertType type, String title, String content) {
        Alert alert = new Alert(type);
        alert.setTitle(title);
        alert.setHeaderText(null);
        alert.setContentText(content);
        alert.showAndWait();
    }

    private CV buildCVFromForm() {
        CV cv = new CV();

        // Set skills
        cv.setSkills(Arrays.asList(skillsField.getText().split("\\s*,\\s*")));

        // Add projects
        projectsContainer.getChildren().forEach(node -> {
            if (node instanceof GridPane projectEntry) {
                String name = ((Label) projectEntry.getChildren().get(1)).getText();
                String description = ((TextArea) projectEntry.getChildren().get(3)).getText();
                cv.getProjects().add(new Project(name, description));
            }
        });

        // Add certificates
        certificatesContainer.getChildren().forEach(node -> {
            if (node instanceof GridPane certEntry) {
                String name = ((Label) certEntry.getChildren().get(1)).getText();
                String institution = ((Label) certEntry.getChildren().get(3)).getText();
                String date = ((Label) certEntry.getChildren().get(5)).getText();
                cv.getCertificates().add(new Certificate(name, institution, java.time.LocalDate.parse(date)));
            }
        });

        // Add languages
        languagesContainer.getChildren().forEach(node -> {
            if (node instanceof GridPane langEntry) {
                String language = ((Label) langEntry.getChildren().get(1)).getText();
                String level = ((Label) langEntry.getChildren().get(3)).getText();
                cv.getLanguages().add(new Language(language, level));
            }
        });

        return cv;
    }
}
==================================================

Fichier: src\main\java\com\example\stage\controller\SignUpChoiceController.java
Package: src\main\java\com\example\stage\controller
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\controller\SignUpChoiceController.java
-----
package com.example.stage.controller;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.stage.Stage;
import java.io.IOException;

public class SignUpChoiceController {
    @FXML
    private Button chercheurEmploiButton;
    @FXML
    private Button entrepriseButton;
    @FXML
    private Button retourButton; // New button for going back to the first page


    @FXML
    public void redirectToChercheurEmploiSignUpPage() {
        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/example/stage/chercheur-emploi-sign-up.fxml"));
            Stage stage = (Stage) chercheurEmploiButton.getScene().getWindow();
            stage.setScene(new Scene(loader.load(), 800, 600));
            stage.show();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    // Redirect to the enterprise sign-up page
    @FXML
    public void redirectToEntrepriseSignUpPage() {
        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/example/stage/entreprise-sign-up.fxml"));
            Stage stage = (Stage) entrepriseButton.getScene().getWindow();
            stage.setScene(new Scene(loader.load(), 800, 600));
            stage.show();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    // Redirect to the first page
    @FXML
    public void redirectToFirstPage() {
        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/example/stage/first-page.fxml"));
            Stage stage = (Stage) retourButton.getScene().getWindow(); // Get the current stage
            stage.setScene(new Scene(loader.load(), 800, 600)); // Load the first page
            stage.show(); // Show the new scene
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
==================================================

Fichier: src\main\java\com\example\stage\controller\SignUpController.java
Package: src\main\java\com\example\stage\controller
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\controller\SignUpController.java
-----
package com.example.stage.controller;

import com.example.stage.model.ChercheurEmploi;
import com.example.stage.model.Entreprise;
import com.example.stage.service.ChercheurEmploiService;
import com.example.stage.service.EntrepriseService;
import com.example.stage.util.BCryptUtil; // Ajoutez cette importation
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.scene.control.ComboBox;
import javafx.scene.control.TextField;
import javafx.scene.control.PasswordField;
import javafx.scene.control.Label;
import javafx.stage.Stage;
import java.io.IOException;

public class SignUpController {
    @FXML
    private TextField usernameField; // Use 'usernameField' instead of 'nomField'
    @FXML
    private TextField emailField;
    @FXML
    private PasswordField motdepasseField;
    @FXML
    private ComboBox<String> roleComboBox; // Options: "chercheur_emploi", "entreprise"
    @FXML
    private Label messageLabel;

    private ChercheurEmploiService chercheurEmploiService = new ChercheurEmploiService();
    private EntrepriseService entrepriseService = new EntrepriseService();

    // Méthode appelée lors du clic sur le bouton "S'inscrire"
    @FXML
    public void sInscrire() {
        String username = usernameField.getText(); // Use 'username' instead of 'nom'
        String email = emailField.getText();
        String motdepasse = motdepasseField.getText();
        String role = roleComboBox.getValue();

        if (username.isEmpty() || email.isEmpty() || motdepasse.isEmpty() || role == null) { // Check 'username' instead of 'nom'
            messageLabel.setText("Tous les champs sont obligatoires.");
            return;
        }

        // Hacher le mot de passe avant de créer l'utilisateur
        String hashedMotdepasse = BCryptUtil.hashPassword(motdepasse);

        switch (role) {
            case "chercheur_emploi":
                // Create a job seeker using 'username' instead of 'nom'
                ChercheurEmploi chercheurEmploi = new ChercheurEmploi(username, email, hashedMotdepasse, null, null, null, null);
                if (chercheurEmploiService.creerChercheurEmploi(chercheurEmploi)) {
                    messageLabel.setText("Inscription réussie en tant que chercheur d'emploi !");
                    redirectToLoginPage(); // Redirection vers la page de connexion
                } else {
                    messageLabel.setText("Échec de l'inscription.");
                }
                break;

            case "entreprise":
                // Create an enterprise using 'username' as 'nom_entreprise'
                Entreprise entreprise = new Entreprise(username, email, hashedMotdepasse, null, username, null, null, null, null, null);
                if (entrepriseService.creerEntrepriseEnAttente(entreprise)) {
                    messageLabel.setText("Votre compte entreprise est en attente de validation par un administrateur.");
                    redirectToLoginPage();
                } else {
                    messageLabel.setText("Échec de l'inscription.");
                }
                break;

            default:
                messageLabel.setText("Rôle invalide.");
        }
    }

    // Redirection vers la page de connexion
    private void redirectToLoginPage() {
        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/example/stage/login.fxml"));
            Stage stage = (Stage) usernameField.getScene().getWindow(); // Use 'usernameField' instead of 'nomField'
            stage.setScene(new Scene(loader.load(), 800, 600));
            stage.show();
        } catch (IOException e) {
            e.printStackTrace();
            messageLabel.setText("Erreur lors de la redirection vers la page de connexion.");
        }
    }
}
==================================================

Fichier: src\main\java\com\example\stage\controller\test.java
Package: src\main\java\com\example\stage\controller
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\controller\test.java
-----
package com.example.stage.controller;

public class test {
}

==================================================

Fichier: src\main\java\com\example\stage\controller\WelcomeController.java
Package: src\main\java\com\example\stage\controller
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\controller\WelcomeController.java
-----
package com.example.stage.controller;

import javafx.animation.RotateTransition;
import javafx.application.Platform;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.scene.image.ImageView;
import javafx.scene.layout.AnchorPane;
import javafx.stage.Stage;
import javafx.util.Duration;

import java.io.IOException;
import java.util.Timer;
import java.util.TimerTask;

public class WelcomeController {

    @FXML
    private ImageView loadingGear;

    @FXML
    private void initialize() {
        // Create a rotation animation for the loading gear
        RotateTransition rotateTransition = new RotateTransition(Duration.seconds(3), loadingGear);
        rotateTransition.setByAngle(360);
        rotateTransition.setCycleCount(RotateTransition.INDEFINITE);
        rotateTransition.play();

        // Timer to transition to the next page after 3 seconds
        Timer timer = new Timer();
        TimerTask task = new TimerTask() {
            private double progress = 0.0;

            @Override
            public void run() {
                progress += 0.01;

                if (progress >= 1.0) {
                    timer.cancel();
                    Platform.runLater(() -> showPage1());
                }
            }
        };
        timer.schedule(task, 0, 70);
    }

    private void showPage1() {
        Stage stage = (Stage) loadingGear.getScene().getWindow();
        try {
            AnchorPane page1 = FXMLLoader.load(getClass().getResource("/com/example/stage/page1.fxml"));
            Scene scene = new Scene(page1, 600, 900);
            stage.setScene(scene);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
==================================================

Fichier: src\main\java\com\example\stage\dao\AdministrateurDAO.java
Package: src\main\java\com\example\stage\dao
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\dao\AdministrateurDAO.java
-----
package com.example.stage.dao;

import com.example.stage.model.Administrateur;
import com.example.stage.util.DatabaseUtil;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public class AdministrateurDAO extends UtilisateurDAO {
    // Create an administrator
    public boolean creerAdministrateur(Administrateur administrateur) {
        if (!super.creerUtilisateur(administrateur)) {
            return false;
        }
        String query = "INSERT INTO administrateurs (id_utilisateur, prenom, nom_complet) VALUES (?, ?, ?)";
        try (Connection connection = DatabaseUtil.getConnection();
             PreparedStatement statement = connection.prepareStatement(query)) {
            statement.setInt(1, administrateur.getId());
            statement.setString(2, administrateur.getPrenom());
            statement.setString(3, administrateur.getNomComplet());
            return statement.executeUpdate() > 0;
        } catch (SQLException e) {
            e.printStackTrace();
            return false;
        }
    }

    // Get administrator by ID
    public Administrateur getAdministrateurById(int id) {
        Administrateur administrateur = (Administrateur) super.getUtilisateurById(id);
        if (administrateur == null || !"administrateur".equals(administrateur.getRole())) {
            return null;
        }
        String query = "SELECT prenom, nom_complet FROM administrateurs WHERE id_utilisateur = ?";
        try (Connection connection = DatabaseUtil.getConnection();
             PreparedStatement statement = connection.prepareStatement(query)) {
            statement.setInt(1, id);
            ResultSet resultSet = statement.executeQuery();
            if (resultSet.next()) {
                administrateur.setPrenom(resultSet.getString("prenom"));
                administrateur.setNomComplet(resultSet.getString("nom_complet"));
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return administrateur;
    }
}
==================================================

Fichier: src\main\java\com\example\stage\dao\ChercheurEmploiDAO.java
Package: src\main\java\com\example\stage\dao
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\dao\ChercheurEmploiDAO.java
-----
package com.example.stage.dao;

import com.example.stage.model.ChercheurEmploi;
import com.example.stage.util.DatabaseUtil;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;

public class ChercheurEmploiDAO extends UtilisateurDAO {

    // Insérer un chercheur d'emploi (seulement dans utilisateurs)
    public boolean creerChercheurEmploi(ChercheurEmploi chercheurEmploi) {
        return super.creerUtilisateur(chercheurEmploi); // Laissez la trigger gérer le reste
    }
}
==================================================

Fichier: src\main\java\com\example\stage\dao\EntrepriseDAO.java
Package: src\main\java\com\example\stage\dao
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\dao\EntrepriseDAO.java
-----
package com.example.stage.dao;

import com.example.stage.model.Entreprise;
import com.example.stage.util.DatabaseUtil;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

public class EntrepriseDAO extends UtilisateurDAO {

    // Insert an enterprise into the waiting table (`entreprises_en_attente`)
    public boolean creerEntrepriseEnAttente(Entreprise entreprise) {
        String query = "INSERT INTO entreprises_en_attente (username, email, motdepasse, nom_entreprise, secteur_activite, adresse, site_web, description, logo) " +
                "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";
        try (Connection connection = DatabaseUtil.getConnection();
             PreparedStatement statement = connection.prepareStatement(query)) {
            statement.setString(1, entreprise.getUsername()); // Use 'username'
            statement.setString(2, entreprise.getEmail());
            statement.setString(3, entreprise.getMotdepasse());
            statement.setString(4, entreprise.getNomEntreprise());
            statement.setString(5, entreprise.getSecteurActivite());
            statement.setString(6, entreprise.getAdresse());
            statement.setString(7, entreprise.getSiteWeb());
            statement.setString(8, entreprise.getDescription());
            statement.setString(9, entreprise.getLogo()); // Set logo as null if not used
            return statement.executeUpdate() > 0;
        } catch (SQLException e) {
            e.printStackTrace();
            return false;
        }
    }

    // Approve an enterprise by moving it from `entreprises_en_attente` to `utilisateurs` and `entreprises`
    public boolean approuverEntreprise(String email) {
        // Insert into `utilisateurs` table
        String insertQuery = "INSERT INTO utilisateurs (username, email, motdepasse, photo, role, est_valide) " +
                "SELECT username, email, motdepasse, NULL, 'entreprise', TRUE FROM entreprises_en_attente WHERE email = ?";
        try (Connection connection = DatabaseUtil.getConnection();
             PreparedStatement insertStatement = connection.prepareStatement(insertQuery)) {
            insertStatement.setString(1, email);
            if (insertStatement.executeUpdate() > 0) {
                // Insert into `entreprises` table
                String moveQuery = "INSERT INTO entreprises (id_utilisateur, nom_entreprise, secteur_activite, adresse, site_web, description, logo) " +
                        "SELECT LAST_INSERT_ID(), nom_entreprise, secteur_activite, adresse, site_web, description, logo FROM entreprises_en_attente WHERE email = ?";
                try (PreparedStatement moveStatement = connection.prepareStatement(moveQuery)) {
                    moveStatement.setString(1, email);
                    if (moveStatement.executeUpdate() > 0) {
                        // Delete from `entreprises_en_attente`
                        String deleteQuery = "DELETE FROM entreprises_en_attente WHERE email = ?";
                        try (PreparedStatement deleteStatement = connection.prepareStatement(deleteQuery)) {
                            deleteStatement.setString(1, email);
                            return deleteStatement.executeUpdate() > 0;
                        }
                    }
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return false;
    }

    // Reject an enterprise by deleting it from `entreprises_en_attente`
    public boolean rejeterEntreprise(String email) {
        String query = "DELETE FROM entreprises_en_attente WHERE email = ?";
        try (Connection connection = DatabaseUtil.getConnection();
             PreparedStatement statement = connection.prepareStatement(query)) {
            statement.setString(1, email);
            return statement.executeUpdate() > 0;
        } catch (SQLException e) {
            e.printStackTrace();
            return false;
        }
    }

    // Get all pending enterprises from `entreprises_en_attente`
    public List<String> getEntreprisesEnAttente() {
        List<String> entreprises = new ArrayList<>();
        String query = "SELECT nom_entreprise, email FROM entreprises_en_attente";
        try (Connection connection = DatabaseUtil.getConnection();
             PreparedStatement statement = connection.prepareStatement(query);
             ResultSet resultSet = statement.executeQuery()) {
            while (resultSet.next()) {
                String nomEntreprise = resultSet.getString("nom_entreprise");
                String email = resultSet.getString("email");
                entreprises.add(nomEntreprise + " - " + email); // Format: "Nom Entreprise - Email"
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return entreprises;
    }

    // Retrieve an enterprise by ID from the `entreprises` table
    public Entreprise getEntrepriseById(int id) {
        Entreprise entreprise = (Entreprise) super.getUtilisateurById(id);
        if (entreprise == null || !"entreprise".equals(entreprise.getRole())) {
            return null;
        }
        String query = "SELECT nom_entreprise, secteur_activite, adresse, site_web, description, logo FROM entreprises WHERE id_utilisateur = ?";
        try (Connection connection = DatabaseUtil.getConnection();
             PreparedStatement statement = connection.prepareStatement(query)) {
            statement.setInt(1, id);
            ResultSet resultSet = statement.executeQuery();
            if (resultSet.next()) {
                entreprise.setNomEntreprise(resultSet.getString("nom_entreprise"));
                entreprise.setSecteurActivite(resultSet.getString("secteur_activite"));
                entreprise.setAdresse(resultSet.getString("adresse"));
                entreprise.setSiteWeb(resultSet.getString("site_web"));
                entreprise.setDescription(resultSet.getString("description"));
                entreprise.setLogo(resultSet.getString("logo")); // Set logo as null if not used
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return entreprise;
    }
}
==================================================

Fichier: src\main\java\com\example\stage\dao\UtilisateurDAO.java
Package: src\main\java\com\example\stage\dao
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\dao\UtilisateurDAO.java
-----
package com.example.stage.dao;

import com.example.stage.model.Utilisateur;
import com.example.stage.util.DatabaseUtil;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

public class UtilisateurDAO {
    // Mettre à jour un utilisateur
    public boolean mettreAJourUtilisateur(Utilisateur utilisateur) {
        String query = "UPDATE utilisateurs SET nom = ?, email = ?, motdepasse = ?, photo = ?, role = ? WHERE id = ?";
        try (Connection connection = DatabaseUtil.getConnection();
             PreparedStatement statement = connection.prepareStatement(query)) {
            statement.setString(1, utilisateur.getUsername());
            statement.setString(2, utilisateur.getEmail());
            statement.setString(3, utilisateur.getMotdepasse());
            statement.setString(4, utilisateur.getPhoto());
            statement.setString(5, utilisateur.getRole());
            statement.setInt(6, utilisateur.getId());
            return statement.executeUpdate() > 0;
        } catch (SQLException e) {
            e.printStackTrace();
            return false;
        }
    }

    // Other existing methods...

    // Insérer un utilisateur
    public boolean creerUtilisateur(Utilisateur utilisateur) {
        String query = "INSERT INTO utilisateurs (username, email, motdepasse, photo, role) VALUES (?, ?, ?, ?, ?)";
        try (Connection connection = DatabaseUtil.getConnection();
             PreparedStatement statement = connection.prepareStatement(query)) {
            statement.setString(1, utilisateur.getUsername()); // Use 'username'
            statement.setString(2, utilisateur.getEmail());
            statement.setString(3, utilisateur.getMotdepasse());
            statement.setString(4, utilisateur.getPhoto());
            statement.setString(5, utilisateur.getRole());
            return statement.executeUpdate() > 0;
        } catch (SQLException e) {
            e.printStackTrace();
            return false;
        }
    }

    // Récupérer un utilisateur par ID
    public Utilisateur getUtilisateurById(int id) {
        String query = "SELECT * FROM utilisateurs WHERE id = ?";
        try (Connection connection = DatabaseUtil.getConnection();
             PreparedStatement statement = connection.prepareStatement(query)) {
            statement.setInt(1, id);
            ResultSet resultSet = statement.executeQuery();
            if (resultSet.next()) {
                return mapToUtilisateur(resultSet);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return null;
    }

    // Récupérer un utilisateur par email
    public Utilisateur getUtilisateurByEmail(String email) {
        String query = "SELECT * FROM utilisateurs WHERE email = ?";
        try (Connection connection = DatabaseUtil.getConnection();
             PreparedStatement statement = connection.prepareStatement(query)) {
            statement.setString(1, email);
            ResultSet resultSet = statement.executeQuery();
            if (resultSet.next()) {
                return mapToUtilisateur(resultSet);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return null;
    }

    // Récupérer tous les utilisateurs
    public List<Utilisateur> getAllUtilisateurs() {
        List<Utilisateur> utilisateurs = new ArrayList<>();
        String query = "SELECT * FROM utilisateurs";
        try (Connection connection = DatabaseUtil.getConnection();
             PreparedStatement statement = connection.prepareStatement(query);
             ResultSet resultSet = statement.executeQuery()) {
            while (resultSet.next()) {
                utilisateurs.add(mapToUtilisateur(resultSet));
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return utilisateurs;
    }

    // Mapper un ResultSet vers un objet Utilisateur
    private Utilisateur mapToUtilisateur(ResultSet resultSet) throws SQLException {
        Utilisateur utilisateur = new Utilisateur();
        utilisateur.setId(resultSet.getInt("id"));
        utilisateur.setUsername(resultSet.getString("username")); // Use 'username'
        utilisateur.setEmail(resultSet.getString("email"));
        utilisateur.setMotdepasse(resultSet.getString("motdepasse"));
        utilisateur.setPhoto(resultSet.getString("photo"));
        utilisateur.setRole(resultSet.getString("role"));
        return utilisateur;
    }

    // Supprimer un utilisateur
    public boolean supprimerUtilisateur(int id) {
        String query = "DELETE FROM utilisateurs WHERE id = ?";
        try (Connection connection = DatabaseUtil.getConnection();
             PreparedStatement statement = connection.prepareStatement(query)) {
            statement.setInt(1, id);
            return statement.executeUpdate() > 0;
        } catch (SQLException e) {
            e.printStackTrace();
            return false;
        }
    }

    // Récupérer la liste des entreprises en attente
    public List<String> getEntreprisesEnAttente() {
        List<String> entreprises = new ArrayList<>();
        String query = "SELECT nom_entreprise, email FROM entreprises_en_attente";
        try (Connection connection = DatabaseUtil.getConnection();
             PreparedStatement statement = connection.prepareStatement(query);
             ResultSet resultSet = statement.executeQuery()) {
            while (resultSet.next()) {
                String nomEntreprise = resultSet.getString("nom_entreprise");
                String email = resultSet.getString("email");
                entreprises.add(nomEntreprise + " - " + email); // Format : "Nom Entreprise - Email"
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return entreprises;
    }

    // Approve an enterprise
    public boolean approuverEntreprise(String email) {
        try (Connection connection = DatabaseUtil.getConnection()) {
            connection.setAutoCommit(false); // Début de transaction

            // Étape 1 : Insérer dans `utilisateurs` et récupérer l'ID généré
            String insertUtilisateurQuery = "INSERT INTO utilisateurs (username, email, motdepasse, role, est_valide) " +
                    "SELECT username, email, motdepasse, 'entreprise', TRUE FROM entreprises_en_attente WHERE email = ?";
            try (PreparedStatement insertStatement = connection.prepareStatement(insertUtilisateurQuery, PreparedStatement.RETURN_GENERATED_KEYS)) {
                insertStatement.setString(1, email);
                if (insertStatement.executeUpdate() == 0) {
                    connection.rollback();
                    return false;
                }
                // Récupérer l'ID généré
                ResultSet generatedKeys = insertStatement.getGeneratedKeys();
                if (!generatedKeys.next()) {
                    connection.rollback();
                    return false;
                }
                int utilisateurId = generatedKeys.getInt(1); // Récupération de l'ID
                generatedKeys.close();

                // Étape 2 : Insérer dans `entreprises` en utilisant l'ID récupéré
                String insertEntrepriseQuery = "INSERT INTO entreprises (id_utilisateur, nom_entreprise, secteur_activite, adresse, site_web, description, logo) " +
                        "SELECT ?, nom_entreprise, secteur_activite, adresse, site_web, description, logo FROM entreprises_en_attente WHERE email = ?";
                try (PreparedStatement insertEntrepriseStatement = connection.prepareStatement(insertEntrepriseQuery)) {
                    insertEntrepriseStatement.setInt(1, utilisateurId);
                    insertEntrepriseStatement.setString(2, email);
                    if (insertEntrepriseStatement.executeUpdate() == 0) {
                        connection.rollback();
                        return false;
                    }
                }

                // Étape 3 : Supprimer de `entreprises_en_attente`
                String deleteQuery = "DELETE FROM entreprises_en_attente WHERE email = ?";
                try (PreparedStatement deleteStatement = connection.prepareStatement(deleteQuery)) {
                    deleteStatement.setString(1, email);
                    if (deleteStatement.executeUpdate() == 0) {
                        connection.rollback();
                        return false;
                    }
                }
            }

            connection.commit(); // Tout est OK, on valide la transaction
            return true;
        } catch (SQLException e) {
            e.printStackTrace();
            return false;
        }
    }


    // Rejeter une entreprise
    public boolean rejeterEntreprise(String email) {
        String query = "DELETE FROM entreprises_en_attente WHERE email = ?";
        try (Connection connection = DatabaseUtil.getConnection();
             PreparedStatement statement = connection.prepareStatement(query)) {
            statement.setString(1, email);
            return statement.executeUpdate() > 0;
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return false;
    }

    public List<String> getAllEntreprises() {
        String query = "SELECT nom_entreprise, email FROM entreprises";
        List<String> entreprises = new ArrayList<>();
        try (Connection connection = DatabaseUtil.getConnection();
             PreparedStatement statement = connection.prepareStatement(query);
             ResultSet resultSet = statement.executeQuery()) {
            while (resultSet.next()) {
                String nomEntreprise = resultSet.getString("nom_entreprise");
                String email = resultSet.getString("email");
                entreprises.add(nomEntreprise + " - " + email); // Format: "Nom Entreprise - Email"
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return entreprises;
    }

    public boolean alterTable(String alterSQL) {
        try (Connection connection = DatabaseUtil.getConnection();
             PreparedStatement statement = connection.prepareStatement(alterSQL)) {
            return statement.executeUpdate() > 0;
        } catch (SQLException e) {
            e.printStackTrace();
            return false;
        }
    }
}

==================================================

Fichier: src\main\java\com\example\stage\model\Administrateur.java
Package: src\main\java\com\example\stage\model
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\model\Administrateur.java
-----
package com.example.stage.model;

public class Administrateur extends Utilisateur {
    private String prenom;
    private String nomComplet;

    // Constructor
    public Administrateur() {}

    public Administrateur(String username, String email, String motdepasse, String photo, String prenom, String nomComplet) {
        super(username, email, motdepasse, photo, "administrateur");
        this.prenom = prenom;
        this.nomComplet = nomComplet;
    }

    // Getters and Setters
    public String getPrenom() {
        return prenom;
    }

    public void setPrenom(String prenom) {
        this.prenom = prenom;
    }

    public String getNomComplet() {
        return nomComplet;
    }

    public void setNomComplet(String nomComplet) {
        this.nomComplet = nomComplet;
    }
}
==================================================

Fichier: src\main\java\com\example\stage\model\Certificate.java
Package: src\main\java\com\example\stage\model
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\model\Certificate.java
-----
package com.example.stage.model;

import java.time.LocalDate;

public class Certificate {
    private String name; // Name of the certificate
    private String institution; // Institution that issued the certificate
    private LocalDate date; // Date of receiving the certificate

    // Constructor
    public Certificate(String name, String institution, LocalDate date) {
        this.name = name;
        this.institution = institution;
        this.date = date;
    }

    // Getters and Setters
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getInstitution() {
        return institution;
    }

    public void setInstitution(String institution) {
        this.institution = institution;
    }

    public LocalDate getDate() {
        return date;
    }

    public void setDate(LocalDate date) {
        this.date = date;
    }

    @Override
    public String toString() {
        return "Certificate{" +
                "name='" + name + '\'' +
                ", institution='" + institution + '\'' +
                ", date=" + date +
                '}';
    }
}
==================================================

Fichier: src\main\java\com\example\stage\model\ChercheurEmploi.java
Package: src\main\java\com\example\stage\model
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\model\ChercheurEmploi.java
-----
package com.example.stage.model;

public class ChercheurEmploi extends Utilisateur {
    private String cv;
    private String diplomes;
    private String experiences;

    // Constructor
    public ChercheurEmploi(String username, String email, String motdepasse, String photo, String cv, String diplomes, String experiences) {
        super(username, email, motdepasse, photo, "chercheur_emploi"); // Use 'username'
        this.cv = cv;
        this.diplomes = diplomes;
        this.experiences = experiences;
    }



        // Constructor with minimal required fields
        public ChercheurEmploi(String username, String email, String motdepasse, String photo, String role) {
            super(username, email, motdepasse, photo, role);
            this.cv = null;
            this.diplomes = null;
            this.experiences = null;
        }

    // Getters and Setters
    public String getCv() {
        return cv;
    }

    public void setCv(String cv) {
        this.cv = cv;
    }

    public String getDiplomes() {
        return diplomes;
    }

    public void setDiplomes(String diplomes) {
        this.diplomes = diplomes;
    }

    public String getExperiences() {
        return experiences;
    }

    public void setExperiences(String experiences) {
        this.experiences = experiences;
    }
}
==================================================

Fichier: src\main\java\com\example\stage\model\Competence.java
Package: src\main\java\com\example\stage\model
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\model\Competence.java
-----
package com.example.stage.model;
public class Competence {
    private String name;
    private String level; // (ex: "Débutant", "Intermédiaire", "Expert")

    public Competence() {
        // Constructeur par défaut (vide)
    }

    public Competence(String name, String level) {
        this.name = name;
        this.level = level;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getLevel() {
        return level;
    }

    public void setLevel(String level) {
        this.level = level;
    }
}
==================================================

Fichier: src\main\java\com\example\stage\model\CV.java
Package: src\main\java\com\example\stage\model
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\model\CV.java
-----
package com.example.stage.model;

import java.util.ArrayList;
import java.util.List;

public class CV {
    private String name;
    private String email;
    private String phone;
    private String address;
    private String linkedin;
    private String portfolio;
    private String summary;
    private List<Education> educations = new ArrayList<>();
    private List<WorkExperience> workExperiences = new ArrayList<>();
    private List<Project> projects = new ArrayList<>();
    private List<Certificate> certificates = new ArrayList<>();
    private List<Language> languages = new ArrayList<>();
    private List<String> skills = new ArrayList<>();

    // Getters and Setters
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getPhone() {
        return phone;
    }

    public void setPhone(String phone) {
        this.phone = phone;
    }

    public String getAddress() {
        return address;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    public String getLinkedin() {
        return linkedin;
    }

    public void setLinkedin(String linkedin) {
        this.linkedin = linkedin;
    }

    public String getPortfolio() {
        return portfolio;
    }

    public void setPortfolio(String portfolio) {
        this.portfolio = portfolio;
    }

    public String getSummary() {
        return summary;
    }

    public void setSummary(String summary) {
        this.summary = summary;
    }

    public List<Education> getEducations() {
        return educations;
    }

    public void setEducations(List<Education> educations) {
        this.educations = educations;
    }

    public List<WorkExperience> getWorkExperiences() {
        return workExperiences;
    }

    public void setWorkExperiences(List<WorkExperience> workExperiences) {
        this.workExperiences = workExperiences;
    }

    public List<Project> getProjects() {
        return projects;
    }

    public void setProjects(List<Project> projects) {
        this.projects = projects;
    }

    public List<Certificate> getCertificates() {
        return certificates;
    }

    public void setCertificates(List<Certificate> certificates) {
        this.certificates = certificates;
    }

    public List<Language> getLanguages() {
        return languages;
    }

    public void setLanguages(List<Language> languages) {
        this.languages = languages;
    }

    public List<String> getSkills() {
        return skills;
    }

    public void setSkills(List<String> skills) {
        this.skills = skills;
    }

    public void setLinkedIn(String text) {
    }
}
==================================================

Fichier: src\main\java\com\example\stage\model\CVAnalysis.java
Package: src\main\java\com\example\stage\model
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\model\CVAnalysis.java
-----
package com.example.stage.model;

public class CVAnalysis {
    private double completenessScore;
    private List<String> suggestions;
    private Map<String, Double> skillsMatchScore;
    // Getters et Setters
}
==================================================

Fichier: src\main\java\com\example\stage\model\CVData.java
Package: src\main\java\com\example\stage\model
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\model\CVData.java
-----
package com.example.stage.model;

import java.util.ArrayList;
import java.util.List;

public class CVData {
    private String fullName;
    private String email;
    private String phone;
    private String address;
    private String linkedin;
    private String portfolio;
    private String summary;
    private List<Education> educations = new ArrayList<>();
    private List<WorkExperience> workExperiences = new ArrayList<>();
    private List<Project> projects = new ArrayList<>();
    private List<Certificate> certificates = new ArrayList<>();
    private List<Language> languages = new ArrayList<>();
    private List<String> skills = new ArrayList<>();

    // Getters and setters
    public String getFullName() {
        return fullName;
    }

    public void setFullName(String fullName) {
        this.fullName = fullName;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getPhone() {
        return phone;
    }

    public void setPhone(String phone) {
        this.phone = phone;
    }

    public String getAddress() {
        return address;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    public String getLinkedin() {
        return linkedin;
    }

    public void setLinkedin(String linkedin) {
        this.linkedin = linkedin;
    }

    public String getPortfolio() {
        return portfolio;
    }

    public void setPortfolio(String portfolio) {
        this.portfolio = portfolio;
    }

    public String getSummary() {
        return summary;
    }

    public void setSummary(String summary) {
        this.summary = summary;
    }

    public List<Education> getEducations() {
        return educations;
    }

    public void setEducations(List<Education> educations) {
        this.educations = educations;
    }

    public List<WorkExperience> getWorkExperiences() {
        return workExperiences;
    }

    public void setWorkExperiences(List<WorkExperience> workExperiences) {
        this.workExperiences = workExperiences;
    }

    public List<Project> getProjects() {
        return projects;
    }

    public void setProjects(List<Project> projects) {
        this.projects = projects;
    }

    public List<Certificate> getCertificates() {
        return certificates;
    }

    public void setCertificates(List<Certificate> certificates) {
        this.certificates = certificates;
    }

    public List<Language> getLanguages() {
        return languages;
    }

    public void setLanguages(List<Language> languages) {
        this.languages = languages;
    }

    public List<String> getSkills() {
        return skills;
    }

    public void setSkills(List<String> skills) {
        this.skills = skills;
    }
}
==================================================

Fichier: src\main\java\com\example\stage\model\Education.java
Package: src\main\java\com\example\stage\model
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\model\Education.java
-----
package com.example.stage.model;

import java.time.LocalDate;

public class Education {
    private String degree;
    private String institution;
    private LocalDate graduationDate;

    public Education() {
    }

    public Education(String degree, String institution, LocalDate graduationDate) {
        this.degree = degree;
        this.institution = institution;
        this.graduationDate = graduationDate;
    }

    public String getDegree() {
        return degree;
    }

    public void setDegree(String degree) {
        this.degree = degree;
    }

    public String getInstitution() {
        return institution;
    }

    public void setInstitution(String institution) {
        this.institution = institution;
    }

    public LocalDate getGraduationDate() {
        return graduationDate;
    }

    public void setGraduationDate(LocalDate graduationDate) {
        this.graduationDate = graduationDate;
    }
}
==================================================

Fichier: src\main\java\com\example\stage\model\Entreprise.java
Package: src\main\java\com\example\stage\model
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\model\Entreprise.java
-----
package com.example.stage.model;

public class Entreprise extends Utilisateur {
    private String nomEntreprise;
    private String secteurActivite;
    private String adresse;
    private String siteWeb;
    private String description;
    private String logo; // Keep this field if needed, or remove it entirely

    // Constructor
    public Entreprise(String username, String email, String motdepasse, String photo, String nomEntreprise, String secteurActivite, String adresse, String siteWeb, String description, String logo) {
        super(username, email, motdepasse, photo, "entreprise"); // Use 'username' and set 'photo' to null
        this.nomEntreprise = nomEntreprise;
        this.secteurActivite = secteurActivite;
        this.adresse = adresse;
        this.siteWeb = siteWeb;
        this.description = description;
        this.logo = logo; // Set to null if not used
    }

    // Getters and Setters
    public String getNomEntreprise() {
        return nomEntreprise;
    }

    public void setNomEntreprise(String nomEntreprise) {
        this.nomEntreprise = nomEntreprise;
    }

    public String getSecteurActivite() {
        return secteurActivite;
    }

    public void setSecteurActivite(String secteurActivite) {
        this.secteurActivite = secteurActivite;
    }

    public String getAdresse() {
        return adresse;
    }

    public void setAdresse(String adresse) {
        this.adresse = adresse;
    }

    public String getSiteWeb() {
        return siteWeb;
    }

    public void setSiteWeb(String siteWeb) {
        this.siteWeb = siteWeb;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getLogo() {
        return logo;
    }

    public void setLogo(String logo) {
        this.logo = logo;
    }
}
==================================================

Fichier: src\main\java\com\example\stage\model\Language.java
Package: src\main\java\com\example\stage\model
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\model\Language.java
-----
package com.example.stage.model;

public class Language {
    private String name; // Name of the language
    private String proficiency; // Proficiency level of the language

    // Constructor
    public Language(String name, String proficiency) {
        this.name = name;
        this.proficiency = proficiency;
    }

    // Getters and Setters
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getProficiency() {
        return proficiency;
    }

    public void setProficiency(String proficiency) {
        this.proficiency = proficiency;
    }

    @Override
    public String toString() {
        return "Language{" +
                "name='" + name + '\'' +
                ", proficiency='" + proficiency + '\'' +
                '}';
    }
}
==================================================

Fichier: src\main\java\com\example\stage\model\ProfileType.java
Package: src\main\java\com\example\stage\model
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\model\ProfileType.java
-----
package com.example.stage.model;

public class ProfileType {
}

==================================================

Fichier: src\main\java\com\example\stage\model\Project.java
Package: src\main\java\com\example\stage\model
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\model\Project.java
-----
package com.example.stage.model;

public class Project {
    private String projectName;
    private String description;

    public Project(String projectName, String description) {
        this.projectName = projectName;
        this.description = description;
    }

    public String getProjectName() {
        return projectName;
    }

    public void setProjectName(String projectName) {
        this.projectName = projectName;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Override
    public String toString() {
        return "Project{" +
                "projectName='" + projectName + '\'' +
                ", description='" + description + '\'' +
                '}';
    }
}
==================================================

Fichier: src\main\java\com\example\stage\model\Utilisateur.java
Package: src\main\java\com\example\stage\model
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\model\Utilisateur.java
-----
package com.example.stage.model;

public class Utilisateur {
    private int id;
    private String username; // Use 'username' instead of 'nom'
    private String email;
    private String motdepasse;
    private String photo;
    private String role;

    // Constructor
    public Utilisateur() {}

    public Utilisateur(String username, String email, String motdepasse, String photo, String role) {
        this.username = username; // Use 'username'
        this.email = email;
        this.motdepasse = motdepasse;
        this.photo = photo;
        this.role = role;
    }

    // Getters and Setters
    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getUsername() { // Use 'getUsername' instead of 'getNom'
        return username;
    }

    public void setUsername(String username) { // Use 'setUsername' instead of 'setNom'
        this.username = username;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getMotdepasse() {
        return motdepasse;
    }

    public void setMotdepasse(String motdepasse) {
        this.motdepasse = motdepasse;
    }

    public String getPhoto() {
        return photo;
    }

    public void setPhoto(String photo) {
        this.photo = photo;
    }

    public String getRole() {
        return role;
    }

    public void setRole(String role) {
        this.role = role;
    }



}
==================================================

Fichier: src\main\java\com\example\stage\model\WorkExperience.java
Package: src\main\java\com\example\stage\model
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\model\WorkExperience.java
-----
package com.example.stage.model;

public class WorkExperience {
    private String jobTitle;
    private String company;
    private String startDate;
    private String endDate;
    private String description;

    public WorkExperience(String jobTitle, String company) {
        this.jobTitle = jobTitle;
        this.company = company;
    }

    public WorkExperience(String jobTitle, String company, String startDate, String endDate, String description) {
        this.jobTitle = jobTitle;
        this.company = company;
        this.startDate = startDate;
        this.endDate = endDate;
        this.description = description;
    }

    public WorkExperience(String jobTitle, String company, String description) {
        this.jobTitle = jobTitle;
        this.company = company;
        this.description = description;
    }

    public String getJobTitle() {
        return jobTitle;
    }

    public void setJobTitle(String jobTitle) {
        this.jobTitle = jobTitle;
    }

    public String getCompany() {
        return company;
    }

    public void setCompany(String company) {
        this.company = company;
    }

    public String getStartDate() {
        return startDate;
    }

    public void setStartDate(String startDate) {
        this.startDate = startDate;
    }

    public String getEndDate() {
        return endDate;
    }

    public void setEndDate(String endDate) {
        this.endDate = endDate;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Override
    public String toString() {
        return "WorkExperience{" +
                "jobTitle='" + jobTitle + '\'' +
                ", company='" + company + '\'' +
                ", startDate='" + startDate + '\'' +
                ", endDate='" + endDate + '\'' +
                ", description='" + description + '\'' +
                '}';
    }
}
==================================================

Fichier: src\main\java\com\example\stage\service\AdministrateurService.java
Package: src\main\java\com\example\stage\service
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\service\AdministrateurService.java
-----
package com.example.stage.service;

import com.example.stage.dao.AdministrateurDAO;
import com.example.stage.model.Administrateur;

public class AdministrateurService {
    private AdministrateurDAO administrateurDAO = new AdministrateurDAO();

    // Create an administrator
    public boolean creerAdministrateur(Administrateur administrateur) {
        return administrateurDAO.creerAdministrateur(administrateur);
    }

    // Get administrator by ID
    public Administrateur getAdministrateurById(int id) {
        return administrateurDAO.getAdministrateurById(id);
    }
}
==================================================

Fichier: src\main\java\com\example\stage\service\AIRecommendationService.java
Package: src\main\java\com\example\stage\service
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\service\AIRecommendationService.java
-----
package com.example.stage.service;

public class AIRecommendationService {
    public enum ProfileType {
        ENGINEERING_INFO,      // Génie Informatique
        ENGINEERING_TELECOM,   // Génie des Télécommunications
        ENGINEERING_ELECTRO,   // Génie Électromécanique
        ENGINEERING_CIVIL,     // Génie Civil
        ENGINEERING_MECHA,     // Génie Mécatronique
        BUSINESS_LBC,         // Licence en Business Computing
        BUSINESS_LMAD,        // Licence en Mathématiques Appliquées
        BUSINESS_LSG,         // Licence en Sciences de Gestion
        MASTER_BA,            // Master en Business Analytics
        MASTER_CCA,           // Master en Comptabilité
        MASTER_MDSI,          // Master en Management Digital
        MASTER_MKD,           // Master en Marketing Digital
        MASTER_FIND,          // Master en Finance Digitale
        MASTER_GAMMA          // Master en Gestion Actuarielle
    }

    public CVRecommendation generateRecommendations(CV cv, ProfileType profileType) {
        // Analyse du CV selon le profil
        CVAnalysis analysis = analyzeCVContent(cv);

        // Génération de recommandations spécifiques au profil
        return generateProfileSpecificRecommendations(analysis, profileType);
    }

    private CVAnalysis analyzeCVContent(CV cv) {
        // Analyse du contenu actuel du CV
        // Identification des points forts et faibles
        return new CVAnalysis();
    }

    private CVRecommendation generateProfileSpecificRecommendations(CVAnalysis analysis, ProfileType profileType) {
        // Génération de recommandations basées sur le type de profil
        return new CVRecommendation();
    }
}
==================================================

Fichier: src\main\java\com\example\stage\service\ChercheurEmploiService.java
Package: src\main\java\com\example\stage\service
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\service\ChercheurEmploiService.java
-----
package com.example.stage.service;

import com.example.stage.dao.ChercheurEmploiDAO;
import com.example.stage.model.ChercheurEmploi;

public class ChercheurEmploiService {
    private ChercheurEmploiDAO chercheurEmploiDAO = new ChercheurEmploiDAO();

    public boolean creerChercheurEmploi(ChercheurEmploi chercheurEmploi) {
        return chercheurEmploiDAO.creerChercheurEmploi(chercheurEmploi);
    }
}
==================================================

Fichier: src\main\java\com\example\stage\service\CVGenerationservice.java
Package: src\main\java\com\example\stage\service
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\service\CVGenerationservice.java
-----
package com.example.stage.service;

import com.example.stage.model.CV;
import com.example.stage.model.CVData;

import java.io.IOException;

public class CVGenerationservice {
    private PDFGenerationService pdfGenerationService = new PDFGenerationService();

    public void generateCV(CVData cvData, String filePath) throws IOException {
        CV cv = new CV();
        cv.setName(cvData.getFullName());
        cv.setEmail(cvData.getEmail());
        cv.setPhone(cvData.getPhone());
        cv.setAddress(cvData.getAddress());
        cv.setLinkedin(cvData.getLinkedin());
        cv.setPortfolio(cvData.getPortfolio());
        cv.setSummary(cvData.getSummary());
        cv.setEducations(cvData.getEducations());
        cv.setWorkExperiences(cvData.getWorkExperiences());
        cv.setProjects(cvData.getProjects());
        cv.setCertificates(cvData.getCertificates());
        cv.setLanguages(cvData.getLanguages());
        cv.setSkills(cvData.getSkills());

        pdfGenerationService.generateCVPDF(cv, filePath);
    }
}
==================================================

Fichier: src\main\java\com\example\stage\service\CVImprovementService.java
Package: src\main\java\com\example\stage\service
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\service\CVImprovementService.java
-----
package com.example.stage.service;

import com.example.stage.model.CV;

import java.util.ArrayList;
import java.util.List;

public class CVImprovementService {

    public List<String> getSuggestions(CV cv) {
        List<String> suggestions = new ArrayList<>();

        if (cv.getWorkExperiences().isEmpty()) {
            suggestions.add("Ajouter plus de détails sur votre expérience professionnelle.");
        } else {
            suggestions.add("Inclure plus de projets pour montrer votre travail.");
        }

        if (cv.getSkills().isEmpty()) {
            suggestions.add("Mettre en avant vos compétences clés.");
        } else {
            suggestions.add("Développer vos compétences pour donner plus de détails.");
        }

        if (cv.getEducations().isEmpty()) {
            suggestions.add("Ajouter votre parcours éducatif.");
        } else {
            suggestions.add("Inclure des certifications ou des cours spéciaux.");
        }

        return suggestions;
    }
}
==================================================

Fichier: src\main\java\com\example\stage\service\EntrepriseService.java
Package: src\main\java\com\example\stage\service
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\service\EntrepriseService.java
-----
package com.example.stage.service;

import com.example.stage.dao.EntrepriseDAO;
import com.example.stage.model.Entreprise;

public class EntrepriseService {
    private EntrepriseDAO entrepriseDAO = new EntrepriseDAO();

    // Insérer une entreprise en attente
    public boolean creerEntrepriseEnAttente(Entreprise entreprise) {
        return entrepriseDAO.creerEntrepriseEnAttente(entreprise);
    }

    // Autres méthodes si nécessaire...
}
==================================================

Fichier: src\main\java\com\example\stage\service\PDFGenerationService.java
Package: src\main\java\com\example\stage\service
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\service\PDFGenerationService.java
-----
package com.example.stage.service;

import com.example.stage.model.CV;
import com.example.stage.model.Certificate;
import com.example.stage.model.Education;
import com.example.stage.model.Language;
import com.example.stage.model.Project;
import com.example.stage.model.WorkExperience;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.PDPageContentStream;
import org.apache.pdfbox.pdmodel.font.PDType1Font;

import java.io.IOException;
import java.util.List;

public class PDFGenerationService {

    public void generateCVPDF(CV cv, String filePath) throws IOException {
        PDDocument document = new PDDocument();
        PDPage page = new PDPage();
        document.addPage(page);

        try (PDPageContentStream contentStream = new PDPageContentStream(document, page)) {
            contentStream.setLeading(14.5f);

            // Add header
            contentStream.beginText();
            contentStream.setFont(PDType1Font.HELVETICA_BOLD, 24);
            contentStream.newLineAtOffset(50, 750);
            contentStream.showText("Curriculum Vitae");
            contentStream.endText();
            contentStream.addRect(50, 745, 500, 1);
            contentStream.stroke();

            int yOffset = 730;

            yOffset = addPersonalInformation(contentStream, cv, yOffset);
            yOffset = addSection(contentStream, "Summary", cv.getSummary(), yOffset);
            yOffset = addEducationSection(contentStream, cv.getEducations(), yOffset);
            yOffset = addWorkExperienceSection(contentStream, cv.getWorkExperiences(), yOffset);
            yOffset = addProjectsSection(contentStream, cv.getProjects(), yOffset);
            yOffset = addCertificatesSection(contentStream, cv.getCertificates(), yOffset);
            yOffset = addLanguagesSection(contentStream, cv.getLanguages(), yOffset);
            addSkillsSection(contentStream, cv.getSkills(), yOffset);
        }

        document.save(filePath);
        document.close();
    }

    private int addPersonalInformation(PDPageContentStream contentStream, CV cv, int yOffset) throws IOException {
        contentStream.beginText();
        contentStream.setFont(PDType1Font.HELVETICA, 12);
        contentStream.newLineAtOffset(50, yOffset);

        if (cv.getName() != null) {
            contentStream.showText("Name: " + cv.getName());
            contentStream.newLine();
        }

        if (cv.getEmail() != null) {
            contentStream.showText("Email: " + cv.getEmail());
            contentStream.newLine();
        }

        if (cv.getPhone() != null) {
            contentStream.showText("Phone: " + cv.getPhone());
            contentStream.newLine();
        }

        if (cv.getAddress() != null) {
            contentStream.showText("Address: " + cv.getAddress());
            contentStream.newLine();
        }

        if (cv.getLinkedin() != null) {
            contentStream.showText("LinkedIn: " + cv.getLinkedin());
            contentStream.newLine();
        }

        if (cv.getPortfolio() != null) {
            contentStream.showText("Portfolio: " + cv.getPortfolio());
            contentStream.newLine();
        }

        contentStream.endText();
        return yOffset - 80;
    }

    private int addSection(PDPageContentStream contentStream, String title, String content, int yOffset) throws IOException {
        if (content == null || content.isEmpty()) {
            return yOffset;
        }

        contentStream.beginText();
        contentStream.setFont(PDType1Font.HELVETICA_BOLD, 14);
        contentStream.newLineAtOffset(50, yOffset);
        contentStream.showText(title);
        contentStream.endText();

        contentStream.beginText();
        contentStream.setFont(PDType1Font.HELVETICA, 12);
        contentStream.newLineAtOffset(50, yOffset - 15);
        contentStream.showText(content);
        contentStream.endText();

        return yOffset - 30;
    }

    private int addEducationSection(PDPageContentStream contentStream, List<Education> educations, int yOffset) throws IOException {
        if (educations.isEmpty()) {
            return yOffset;
        }

        contentStream.beginText();
        contentStream.setFont(PDType1Font.HELVETICA_BOLD, 14);
        contentStream.newLineAtOffset(50, yOffset);
        contentStream.showText("Education");
        contentStream.endText();
        yOffset -= 15;

        contentStream.beginText();
        contentStream.setFont(PDType1Font.HELVETICA, 12);
        for (Education education : educations) {
            contentStream.newLineAtOffset(50, yOffset);
            contentStream.showText(education.getDegree() + " - " + education.getInstitution() + " (" + education.getGraduationDate() + ")");
            contentStream.newLine();
            yOffset -= 15;
        }
        contentStream.endText();
        return yOffset - 15;
    }

    private int addWorkExperienceSection(PDPageContentStream contentStream, List<WorkExperience> workExperiences, int yOffset) throws IOException {
        if (workExperiences.isEmpty()) {
            return yOffset;
        }

        contentStream.beginText();
        contentStream.setFont(PDType1Font.HELVETICA_BOLD, 14);
        contentStream.newLineAtOffset(50, yOffset);
        contentStream.showText("Work Experience");
        contentStream.endText();
        yOffset -= 15;

        contentStream.beginText();
        contentStream.setFont(PDType1Font.HELVETICA, 12);
        for (WorkExperience workExperience : workExperiences) {
            contentStream.newLineAtOffset(50, yOffset);
            contentStream.showText(workExperience.getJobTitle() + " - " + workExperience.getCompany() + " (" + workExperience.getStartDate() + " - " + workExperience.getEndDate() + ")");
            contentStream.newLineAtOffset(0, -15);
            contentStream.showText(workExperience.getDescription());
            yOffset -= 30;
        }
        contentStream.endText();
        return yOffset - 15;
    }

    private int addProjectsSection(PDPageContentStream contentStream, List<Project> projects, int yOffset) throws IOException {
        if (projects.isEmpty()) {
            return yOffset;
        }

        contentStream.beginText();
        contentStream.setFont(PDType1Font.HELVETICA_BOLD, 14);
        contentStream.newLineAtOffset(50, yOffset);
        contentStream.showText("Projects");
        contentStream.endText();
        yOffset -= 15;

        contentStream.beginText();
        contentStream.setFont(PDType1Font.HELVETICA, 12);
        for (Project project : projects) {
            contentStream.newLineAtOffset(50, yOffset);
            contentStream.showText(project.getProjectName());
            contentStream.newLineAtOffset(0, -15);
            contentStream.showText(project.getDescription());
            yOffset -= 30;
        }
        contentStream.endText();
        return yOffset - 15;
    }

    private int addCertificatesSection(PDPageContentStream contentStream, List<Certificate> certificates, int yOffset) throws IOException {
        if (certificates.isEmpty()) {
            return yOffset;
        }

        contentStream.beginText();
        contentStream.setFont(PDType1Font.HELVETICA_BOLD, 14);
        contentStream.newLineAtOffset(50, yOffset);
        contentStream.showText("Certificates");
        contentStream.endText();
        yOffset -= 15;

        contentStream.beginText();
        contentStream.setFont(PDType1Font.HELVETICA, 12);
        for (Certificate certificate : certificates) {
            contentStream.newLineAtOffset(50, yOffset);
            contentStream.showText(certificate.getName() + " - " + certificate.getInstitution() + " (" + certificate.getDate() + ")");
            contentStream.newLine();
            yOffset -= 15;
        }
        contentStream.endText();
        return yOffset - 15;
    }

    private int addLanguagesSection(PDPageContentStream contentStream, List<Language> languages, int yOffset) throws IOException {
        if (languages.isEmpty()) {
            return yOffset;
        }

        contentStream.beginText();
        contentStream.setFont(PDType1Font.HELVETICA_BOLD, 14);
        contentStream.newLineAtOffset(50, yOffset);
        contentStream.showText("Languages");
        contentStream.endText();
        yOffset -= 15;

        contentStream.beginText();
        contentStream.setFont(PDType1Font.HELVETICA, 12);
        for (Language language : languages) {
            contentStream.newLineAtOffset(50, yOffset);
            contentStream.showText(language.getName() + " - " + language.getProficiency());
            contentStream.newLine();
            yOffset -= 15;
        }
        contentStream.endText();
        return yOffset - 15;
    }

    private void addSkillsSection(PDPageContentStream contentStream, List<String> skills, int yOffset) throws IOException {
        if (skills.isEmpty()) {
            return;
        }

        contentStream.beginText();
        contentStream.setFont(PDType1Font.HELVETICA_BOLD, 14);
        contentStream.newLineAtOffset(50, yOffset);
        contentStream.showText("Skills");
        contentStream.endText();
        yOffset -= 15;

        contentStream.beginText();
        contentStream.setFont(PDType1Font.HELVETICA, 12);
        for (String skill : skills) {
            contentStream.newLineAtOffset(50, yOffset);
            contentStream.showText(skill);
            contentStream.newLine();
            yOffset -= 15;
        }
        contentStream.endText();
    }
}
==================================================

Fichier: src\main\java\com\example\stage\service\UserService.java
Package: src\main\java\com\example\stage\service
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\service\UserService.java
-----
package com.example.stage.service;

public class UserService {

    public String getUserName() {
        return "Mohamed Abidi";
    }

    public String getUserEmail() {
        return "mohamed.abidi@example.com";
    }

    public String getUserPhone() {
        return "+21612345678";
    }

    public String getUserAddress() {
        return "123 Rue Principale, Omran, Monastir, Tunisie";
    }

    public String getUserLinkedIn() {
        return "https://www.linkedin.com/in/mohamedabidi";
    }

    public String getUserPortfolio() {
        return "https://mohamedabidi.com";
    }

    public String getUserSummary() {
        return "Développeur logiciel expérimenté avec une passion pour la création de solutions innovantes.";
    }
}
==================================================

Fichier: src\main\java\com\example\stage\service\UtilisateurService.java
Package: src\main\java\com\example\stage\service
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\service\UtilisateurService.java
-----
package com.example.stage.service;

import com.example.stage.dao.UtilisateurDAO;
import com.example.stage.model.Utilisateur;
import com.example.stage.util.DatabaseUtil;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

public class UtilisateurService {
    private UtilisateurDAO utilisateurDAO = new UtilisateurDAO();

    // Create a user
    public boolean creerUtilisateur(Utilisateur utilisateur) {
        return utilisateurDAO.creerUtilisateur(utilisateur);
    }

    // Get user by ID
    public Utilisateur getUtilisateurById(int id) {
        return utilisateurDAO.getUtilisateurById(id);
    }

    // Get user by email
    public Utilisateur getUtilisateurByEmail(String email) {
        return utilisateurDAO.getUtilisateurByEmail(email);
    }

    // Get all users
    public List<Utilisateur> getAllUtilisateurs() {
        return utilisateurDAO.getAllUtilisateurs();
    }

    // Mettre à jour un utilisateur
    public boolean mettreAJourUtilisateur(Utilisateur utilisateur) {
        return utilisateurDAO.mettreAJourUtilisateur(utilisateur);
    }

    // Supprimer un utilisateur
    public boolean supprimerUtilisateur(int id) {
        return utilisateurDAO.supprimerUtilisateur(id);
    }


    // Récupérer la liste des entreprises en attente
    public List<String> getEntreprisesEnAttente() {
        return utilisateurDAO.getEntreprisesEnAttente();
    }

    // Approve an enterprise
    public boolean approuverEntreprise(String email) {
        return utilisateurDAO.approuverEntreprise(email);
    }

    // Rejeter une entreprise
    public boolean rejeterEntreprise(String email) {
        return utilisateurDAO.rejeterEntreprise(email);
    }
    public boolean existsAdmin() {
        String query = "SELECT COUNT(*) AS count FROM utilisateurs WHERE role = 'administrateur'";
        try (Connection connection = DatabaseUtil.getConnection();
             PreparedStatement statement = connection.prepareStatement(query);
             ResultSet resultSet = statement.executeQuery()) {
            if (resultSet.next()) {
                return resultSet.getInt("count") > 0;
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return false;
    }
    public List<String> getAllEntreprises() {
        return utilisateurDAO.getAllEntreprises();
    }
}
==================================================

Fichier: src\main\java\com\example\stage\util\BCryptUtil.java
Package: src\main\java\com\example\stage\util
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\util\BCryptUtil.java
-----
package com.example.stage.util;

import org.mindrot.jbcrypt.BCrypt;

public class BCryptUtil {

    // Hacher un mot de passe
    public static String hashPassword(String password) {
        return BCrypt.hashpw(password, BCrypt.gensalt());
    }

    // Vérifier un mot de passe
    public static boolean checkPassword(String plainTextPassword, String hashedPassword) {
        return BCrypt.checkpw(plainTextPassword, hashedPassword);
    }
}
==================================================

Fichier: src\main\java\com\example\stage\util\DatabaseUtil.java
Package: src\main\java\com\example\stage\util
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\util\DatabaseUtil.java
-----
package com.example.stage.util;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

public class DatabaseUtil {

    private static final String DB_URL = "jdbc:mysql://localhost:3306/Esprimcareer1";
    private static final String DB_USER = "root";
    private static final String DB_PASSWORD = "root";

    // Obtenir une connexion à la base de données
    public static Connection getConnection() throws SQLException {
        try {
            return DriverManager.getConnection(DB_URL, DB_USER, DB_PASSWORD);
        } catch (SQLException e) {
            System.err.println("Erreur de connexion à la base de données : " + e.getMessage());
            throw e;
        }
    }

    public static void main(String[] args) {
        try {
            Connection connection = getConnection();
            if (connection != null) {
                System.out.println("Connexion réussie !");
                connection.close();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}
==================================================

Fichier: src\main\java\com\example\stage\util\FileUtil.java
Package: src\main\java\com\example\stage\util
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\util\FileUtil.java
-----
package com.example.stage.util;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

public class FileUtil {

    private static final String UPLOAD_DIR = "uploads/";

    // Créer le répertoire d'upload s'il n'existe pas
    static {
        File directory = new File(UPLOAD_DIR);
        if (!directory.exists()) {
            directory.mkdirs();
        }
    }

    // Enregistrer un fichier dans le répertoire d'upload
    public static String saveFile(String fileName, byte[] content) {
        try {
            Path path = Paths.get(UPLOAD_DIR + fileName);

            // Vérifier si le fichier existe déjà
            if (Files.exists(path)) {
                throw new IOException("Le fichier existe déjà : " + fileName);
            }

            // Écrire le contenu du fichier
            Files.write(path, content);
            return path.toString(); // Retourner le chemin du fichier
        } catch (IOException e) {
            e.printStackTrace();
            return null; // Échec de l'enregistrement
        }
    }

    // Supprimer un fichier
    public static boolean deleteFile(String filePath) {
        try {
            Files.deleteIfExists(Paths.get(filePath));
            return true;
        } catch (IOException e) {
            e.printStackTrace();
            return false;
        }
    }
}
==================================================

Fichier: src\main\java\com\example\stage\util\TranslationService.java
Package: src\main\java\com\example\stage\util
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\util\TranslationService.java
-----
package com.example.stage.util;

import java.nio.charset.StandardCharsets;
import java.util.Locale;
import java.util.PropertyResourceBundle;
import java.util.ResourceBundle;
import java.io.InputStreamReader;
import java.io.IOException;

public class TranslationService {

    /**
     * Charge le fichier de traduction pour une langue spécifique.
     *
     * @param baseName  Le nom de base du fichier d'internationalisation, sans suffixe.
     * @param locale    La locale ciblée (ex : fr, en, de).
     * @return          Le ResourceBundle contenant les traductions.
     */
    public static ResourceBundle loadBundle(String baseName, Locale locale) {
        String resourceName = baseName + "_" + locale.getLanguage() + ".properties";
        try (InputStreamReader reader = new InputStreamReader(
                TranslationService.class.getResourceAsStream("/" + resourceName), StandardCharsets.UTF_8)) {
            return new PropertyResourceBundle(reader);
        } catch (IOException | NullPointerException e) {
            throw new RuntimeException("Impossible de charger le fichier de ressources : " + resourceName, e);
        }
    }

    /**
     * Récupère une traduction basée sur une clé et une locale.
     *
     * @param key       La clé de traduction, telle que définie dans le fichier.
     * @param baseName  Le nom de base du fichier de ressources (ex : "messages").
     * @param locale    La locale ciblée (Langue à utiliser).
     * @return          La traduction associée à la clé ou un texte par défaut si non trouvée.
     */
    public static String getTranslation(String baseName, String key, Locale locale) {
        try {
            ResourceBundle bundle = loadBundle(baseName, locale);
            return bundle.getString(key);
        } catch (Exception e) {
            System.err.println("Erreur de traduction pour la clé : " + key);
            return "[" + key + "]";
        }
    }
}
==================================================

Fichier: src\main\java\com\example\stage\util\TranslationUtils.java
Package: src\main\java\com\example\stage\util
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\util\TranslationUtils.java
-----
package com.example.stage.util;

import java.util.MissingResourceException;
import java.util.ResourceBundle;

public class TranslationUtils {
    public static String getSafeTranslation(ResourceBundle bundle, String key) {
        try {
            return bundle.getString(key);
        } catch (MissingResourceException e) {
            System.err.println("Translation key not found: " + key + " for locale " + bundle.getLocale());
            return "[" + key + "]";
        }
    }
}
==================================================

Fichier: src\main\java\com\example\stage\CVBuilder.java
Package: src\main\java\com\example\stage
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\CVBuilder.java
-----
package com.example.stage;

import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.stage.Stage;

import java.io.IOException;

public class CVBuilder extends Application {

    @Override
    public void start(Stage primaryStage) throws IOException {
        Parent root = FXMLLoader.load(getClass().getResource("/com/example/stage/welcome.fxml"));
        primaryStage.setTitle("CV Builder");
        primaryStage.setScene(new Scene(root, 600, 900));
        primaryStage.show();
    }

    public static void main(String[] args) {
        launch(args);
    }
}
==================================================

Fichier: src\main\java\com\example\stage\HelloApplication.java
Package: src\main\java\com\example\stage
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\HelloApplication.java
-----
package com.example.stage;

import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.stage.Stage;
import javafx.stage.StageStyle;

import java.io.IOException;

public class HelloApplication extends Application {
    @Override
    public void start(Stage stage) throws IOException {
        // Load the first page FXML file
        FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource("first-page.fxml"));
        Scene scene = new Scene(fxmlLoader.load(), 800, 600);

        // Remove window decorations (optional)
        stage.initStyle(StageStyle.UNDECORATED);

        // Set the scene and show the stage
        stage.setScene(scene);
        stage.show();
    }

    public static void main(String[] args) {
        launch();
    }
}
==================================================

Fichier: src\main\java\com\example\stage\MainApp.java
Package: src\main\java\com\example\stage
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\com\example\stage\MainApp.java
-----
package com.example.stage;

import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.stage.Stage;

public class MainApp extends Application {

    @Override
    public void start(Stage primaryStage) throws Exception {
        FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/example/stage/database_alter.fxml"));
        Scene scene = new Scene(loader.load());
        primaryStage.setScene(scene);
        primaryStage.setTitle("Database Alter Test");
        primaryStage.show();
    }

    public static void main(String[] args) {
        launch(args);
    }
}
==================================================

Fichier: src\main\java\PDType1Font\HELVETICA.java
Package: src\main\java\PDType1Font
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\PDType1Font\HELVETICA.java
-----
package PDType1Font;

public class HELVETICA {
}

==================================================

Fichier: src\main\java\PDType1Font\HELVETICA_BOLD.java
Package: src\main\java\PDType1Font
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\PDType1Font\HELVETICA_BOLD.java
-----
package PDType1Font;

public class HELVETICA_BOLD {
}

==================================================

Fichier: src\main\java\module-info.java
Package: src\main\java
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\java\module-info.java
-----
module com.example.stage {
    requires javafx.controls;
    requires javafx.fxml;
    requires javafx.web;
    requires org.controlsfx.controls;
    requires com.dlsc.formsfx;
    requires net.synedra.validatorfx;
    requires org.kordamp.ikonli.javafx;
    requires org.kordamp.bootstrapfx.core;
    requires eu.hansolo.tilesfx;
    requires com.almasb.fxgl.all;

    requires java.sql; // Pour la base de données
    requires jbcrypt; // Pour le hachage de mots de passe

    requires org.apache.pdfbox;
        // Ensure the PDFBox library (e.g., pdfbox-<version>.jar) is added to your module path or as a dependency in your build system.

    opens com.example.stage to javafx.fxml, com.example.stage; // Ouvre le package principal pour les FXML et le module lui-même
    opens com.example.stage.controller to javafx.fxml, com.example.stage; // Ajoutez cette ligne pour ouvrir le package controller
    exports com.example.stage; // Exporte le package principal
}
==================================================

Fichier: src\main\resources\com\example\stage\admin-demandes.fxml
Package: src\main\resources\com\example\stage
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\resources\com\example\stage\admin-demandes.fxml
-----
<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.*?>
<?import javafx.scene.layout.*?>
<?import javafx.geometry.Insets?>

<VBox xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.example.stage.controller.AdminDemandesController" spacing="20" alignment="CENTER" >
    <Label text="Demandes d'inscription des entreprises" style="-fx-font-size: 20px;" />

    <!-- List of pending enterprises -->
    <ListView fx:id="entreprisesEnAttenteListView" prefWidth="400" prefHeight="300" />

    <!-- Buttons for approving or rejecting enterprises -->
    <HBox spacing="10">
        <Button fx:id="approuverButton" text="Approuver" onAction="#approuverEntreprise" />
        <Button fx:id="rejeterButton" text="Rejeter" onAction="#rejeterEntreprise" />
    </HBox>

    <!-- Message label for feedback -->
    <Label fx:id="messageLabel" text="" style="-fx-text-fill: red;" />
</VBox>
==================================================

Fichier: src\main\resources\com\example\stage\admin-gestion-utilisateurs.fxml
Package: src\main\resources\com\example\stage
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\resources\com\example\stage\admin-gestion-utilisateurs.fxml
-----
<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.*?>
<?import javafx.scene.layout.*?>
<?import javafx.geometry.Insets?>

<VBox xmlns:fx="http://javafx.com/fxml/1"
      fx:controller="com.example.stage.controller.AdminGestionUtilisateursController"
      spacing="20" alignment="CENTER" >
    <Label text="Gestion des utilisateurs" style="-fx-font-size: 24px;" />

    <!-- Button to manage enterprises -->
    <Button fx:id="gererEntreprisesButton" text="Gérer Entreprises" onAction="#ouvrirPageToutesEntreprises" />

    <!-- Button to manage job seekers -->
    <Button fx:id="gererChercheursEmploiButton" text="Gérer Chercheurs Emploi" onAction="#ouvrirPageTousChercheursEmploi" />

    <!-- Button to go back to admin home -->
    <Button fx:id="retourButton" text="Retour" onAction="#retournerAAdminHome" />

    <Button fx:id="voirToutesLesEntreprisesButton" text="Voir Toutes les Entreprises" onAction="#ouvrirPageToutesEntreprises" />
</VBox>
==================================================

Fichier: src\main\resources\com\example\stage\admin-home.fxml
Package: src\main\resources\com\example\stage
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\resources\com\example\stage\admin-home.fxml
-----
<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.*?>
<?import javafx.scene.layout.*?>
<?import javafx.geometry.Insets?>

<VBox xmlns:fx="http://javafx.com/fxml/1"
      fx:controller="com.example.stage.controller.AdminHomeController"
      spacing="20" alignment="CENTER" >
    <Label text="Page d'accueil administrateur" style="-fx-font-size: 24px;" />

    <!-- Button to manage enterprise requests -->
    <Button fx:id="gererDemandesButton" text="Gérer Demandes Entreprises" onAction="#ouvrirPageDemandesEntreprises" />

    <!-- New button to manage all users -->
    <Button fx:id="gererUtilisateursButton" text="Gérer Utilisateurs" onAction="#ouvrirPageGestionUtilisateurs" />

    <!-- Logout button -->
    <Button text="Déconnexion" onAction="#deconnecter" />
</VBox>
==================================================

Fichier: src\main\resources\com\example\stage\admin-sign-up.fxml
Package: src\main\resources\com\example\stage
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\resources\com\example\stage\admin-sign-up.fxml
-----
<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.Button?>
<?import javafx.scene.control.Label?>
<?import javafx.scene.control.PasswordField?>
<?import javafx.scene.control.TextField?>
<?import javafx.scene.layout.VBox?>
<?import javafx.scene.text.Text?>

<VBox alignment="CENTER" prefHeight="436.0" prefWidth="353.0" spacing="10" xmlns:fx="http://javafx.com/fxml/1" xmlns="http://javafx.com/javafx/23.0.1" fx:controller="com.example.stage.controller.AdminController">
    <Text style="-fx-font-size: 24px;" text="Créer un Administrateur" />

    <!-- Champ Nom -->
    <Label text="Nom :" />
    <TextField fx:id="nomField" promptText="Entrez le nom de l'administrateur" />

    <!-- Champ Email -->
    <Label text="Email :" />
    <TextField fx:id="emailField" promptText="Entrez l'email de l'administrateur" />

    <!-- Champ Mot de Passe -->
    <Label text="Mot de passe :" />
    <PasswordField fx:id="motdepasseField" promptText="Entrez le mot de passe" />

    <!-- Champ Prénom -->
    <Label text="Prénom :" />
    <TextField fx:id="prenomField" promptText="Entrez le prénom" />

    <!-- Champ Nom Complet -->
    <Label text="Nom complet :" />
    <TextField fx:id="nomCompletField" promptText="Entrez le nom complet" />

    <!-- Bouton Créer Administrateur -->
    <Button onAction="#creerAdministrateur" text="Créer Administrateur" />

    <!-- Message de Statut -->
    <Label fx:id="messageLabel" style="-fx-text-fill: red;" />
</VBox>

==================================================

Fichier: src\main\resources\com\example\stage\admin-toutes-entreprises.fxml
Package: src\main\resources\com\example\stage
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\resources\com\example\stage\admin-toutes-entreprises.fxml
-----
<?xml version="1.0" encoding="UTF-8"?>
<?import javafx.scene.control.*?>
<?import javafx.scene.layout.*?>
<?import javafx.geometry.Insets?>

<VBox xmlns:fx="http://javafx.com/fxml/1"
      fx:controller="com.example.stage.controller.AdminToutesEntreprisesController"
      spacing="20" alignment="CENTER" >
    <Label text="Liste de toutes les entreprises" style="-fx-font-size: 24px;" />

    <!-- ListView to display all enterprises -->
    <ListView fx:id="entreprisesListView" prefWidth="600" prefHeight="400" />

    <!-- Button to go back to admin home -->
    <Button fx:id="retourButton" text="Retour" onAction="#retournerAAdminHome" />
</VBox>
==================================================

Fichier: src\main\resources\com\example\stage\chercheur-emploi-sign-up.fxml
Package: src\main\resources\com\example\stage
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\resources\com\example\stage\chercheur-emploi-sign-up.fxml
-----
<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.Button?>
<?import javafx.scene.control.Label?>
<?import javafx.scene.control.PasswordField?>
<?import javafx.scene.control.TextField?>
<?import javafx.scene.layout.VBox?>

<VBox alignment="CENTER" prefHeight="290.0" prefWidth="512.0" spacing="10" xmlns:fx="http://javafx.com/fxml/1" xmlns="http://javafx.com/javafx/23.0.1" fx:controller="com.example.stage.controller.ChercheurEmploiSignUpController">
    <Label prefHeight="61.0" prefWidth="468.0" style="-fx-font-size: 20px;" text="Inscription en tant que chercheur emploi" />

    <!-- Username Field -->
    <TextField fx:id="usernameField" promptText="Nom d'utilisateur" />

    <!-- Email Field -->
    <TextField fx:id="emailField" promptText="Email" />

    <!-- Password Field -->
    <PasswordField fx:id="motdepasseField" promptText="Mot de passe" />

    <!-- Sign Up Button -->
    <Button onAction="#sInscrire" text="S'inscrire" />

    <!-- Back Button -->
    <Button onAction="#retournerAuChoixInscription" text="Retour" />

    <!-- Message Label -->
    <Label fx:id="messageLabel" style="-fx-text-fill: red;" text="" />
</VBox>

==================================================

Fichier: src\main\resources\com\example\stage\create-admin.fxml
Package: src\main\resources\com\example\stage
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\resources\com\example\stage\create-admin.fxml
-----
<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.Button?>
<?import javafx.scene.control.PasswordField?>
<?import javafx.scene.control.TextField?>
<?import javafx.scene.layout.VBox?>

<VBox prefHeight="276.0" prefWidth="249.0" spacing="10" xmlns:fx="http://javafx.com/fxml/1" xmlns="http://javafx.com/javafx/23.0.1" fx:controller="com.example.stage.controller.CreateAdminController">
    <TextField fx:id="usernameField" promptText="Nom d'utilisateur" />
    <TextField fx:id="emailField" promptText="Email" />
    <PasswordField fx:id="motdepasseField" promptText="Mot de passe" />
    <TextField fx:id="prenomField" promptText="Prénom" />
    <TextField fx:id="nomCompletField" promptText="Nom complet" />
    <Button onAction="#creerAdministrateur" text="Créer Administrateur" />
</VBox>

==================================================

Fichier: src\main\resources\com\example\stage\cv-form-styles.css
Package: src\main\resources\com\example\stage
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\resources\com\example\stage\cv-form-styles.css
-----
/* Define styles for different UI elements */
.heading {
    -fx-font-family: 'Roboto';
    -fx-font-weight: bold;
    -fx-font-size: 24px;
    -fx-text-fill: #E31A22;
}

.label {
    -fx-font-family: 'Roboto';
    -fx-font-weight: normal;
    -fx-font-size: 16px;
    -fx-text-fill: #000000;
}

.body-text {
    -fx-font-family: 'Roboto';
    -fx-font-weight: 300;
    -fx-font-size: 14px;
    -fx-text-fill: #000000;
}

.button {
    -fx-font-family: 'Roboto';
    -fx-font-weight: bold;
    -fx-font-size: 16px;
    -fx-background-color: #E31A22;
    -fx-text-fill: white;
}
==================================================

Fichier: src\main\resources\com\example\stage\cv-form.fxml
Package: src\main\resources\com\example\stage
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\resources\com\example\stage\cv-form.fxml
-----
<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.Button?>
<?import javafx.scene.control.ComboBox?>
<?import javafx.scene.control.Label?>
<?import javafx.scene.control.TextArea?>
<?import javafx.scene.control.TextField?>
<?import javafx.scene.control.DatePicker?>
<?import javafx.scene.layout.AnchorPane?>
<?import javafx.scene.layout.GridPane?>
<?import javafx.scene.layout.VBox?>

<AnchorPane prefHeight="794.0" prefWidth="858.0" xmlns="http://javafx.com/javafx/21" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.example.stage.controller.Page1Controller">

    <GridPane alignment="CENTER" hgap="10" maxWidth="Infinity" vgap="10" AnchorPane.topAnchor="10.0" AnchorPane.leftAnchor="10.0" AnchorPane.rightAnchor="10.0" AnchorPane.bottomAnchor="10.0">

        <!-- Section: Personal Information -->
        <Label fx:id="personalInformationLabel" style="-fx-font-weight: bold; -fx-text-fill: #E31A22;" GridPane.columnSpan="2" GridPane.rowIndex="0" />
        <Label fx:id="fullNameLabel" GridPane.rowIndex="1" />
        <TextField fx:id="nameField" GridPane.columnIndex="1" GridPane.rowIndex="1" />
        <Label fx:id="emailLabel" GridPane.rowIndex="2" />
        <TextField fx:id="emailField" GridPane.columnIndex="1" GridPane.rowIndex="2" />
        <Label fx:id="phoneLabel" GridPane.rowIndex="3" />
        <TextField fx:id="phoneField" GridPane.columnIndex="1" GridPane.rowIndex="3" />
        <Label fx:id="addressLabel" GridPane.rowIndex="4" />
        <TextArea fx:id="addressArea" prefHeight="60" GridPane.columnIndex="1" GridPane.rowIndex="4" />
        <Label fx:id="linkedinLabel" GridPane.rowIndex="5" />
        <TextField fx:id="linkedinField" GridPane.columnIndex="1" GridPane.rowIndex="5" />
        <Label fx:id="portfolioLabel" GridPane.rowIndex="6" />
        <TextField fx:id="portfolioField" GridPane.columnIndex="1" GridPane.rowIndex="6" />

        <!-- Section: Summary / Objective -->
        <Label fx:id="summaryObjectiveLabel" style="-fx-font-weight: bold; -fx-text-fill: #E31A22;" GridPane.columnSpan="2" GridPane.rowIndex="7" />
        <TextArea fx:id="summaryArea" prefHeight="80" GridPane.columnSpan="2" GridPane.rowIndex="8" />

        <!-- Section: Education -->
        <Label fx:id="educationLabel" style="-fx-font-weight: bold; -fx-text-fill: #E31A22;" GridPane.columnSpan="2" GridPane.rowIndex="9" />
        <VBox fx:id="educationContainer" spacing="5" GridPane.columnSpan="2" GridPane.rowIndex="10">
            <GridPane hgap="5" vgap="5">
                <Label text="Degree:" GridPane.columnIndex="0" GridPane.rowIndex="0" />
                <TextField fx:id="degreeField" GridPane.columnIndex="1" GridPane.rowIndex="0" />
                <Label text="Institution:" GridPane.columnIndex="0" GridPane.rowIndex="1" />
                <TextField fx:id="institutionField" GridPane.columnIndex="1" GridPane.rowIndex="1" />
                <Label text="Graduation Date:" GridPane.columnIndex="0" GridPane.rowIndex="2" />
                <DatePicker fx:id="graduationDateField" GridPane.columnIndex="1" GridPane.rowIndex="2" />
                <Button fx:id="addEducationButton" onAction="#addEducation" style="-fx-background-color: #E31A22; -fx-text-fill: white;" GridPane.columnIndex="1" GridPane.rowIndex="3" />
            </GridPane>
        </VBox>

        <!-- Section: Work Experience -->
        <Label fx:id="workExperienceLabel" style="-fx-font-weight: bold; -fx-text-fill: #E31A22;" GridPane.columnSpan="2" GridPane.rowIndex="11" />
        <VBox fx:id="workExperienceContainer" spacing="5" GridPane.columnSpan="2" GridPane.rowIndex="12">
            <GridPane hgap="5" vgap="5">
                <Label text="Job Title:" GridPane.columnIndex="0" GridPane.rowIndex="0" />
                <TextField fx:id="jobTitleField" GridPane.columnIndex="1" GridPane.rowIndex="0" />
                <Label text="Company:" GridPane.columnIndex="0" GridPane.rowIndex="1" />
                <TextField fx:id="companyField" GridPane.columnIndex="1" GridPane.rowIndex="1" />
                <Label text="Description:" GridPane.columnIndex="0" GridPane.rowIndex="2" />
                <TextArea fx:id="descriptionArea" prefHeight="60" GridPane.columnIndex="1" GridPane.rowIndex="2" />
                <Button fx:id="addWorkExperienceButton" onAction="#addWorkExperience" style="-fx-background-color: #E31A22; -fx-text-fill: white;" GridPane.columnIndex="1" GridPane.rowIndex="3" />
            </GridPane>
        </VBox>

        <!-- Next Button -->
        <Button fx:id="nextButton" onAction="#goToPage2" style="-fx-background-color: #E31A22; -fx-text-fill: white;" GridPane.columnIndex="1" GridPane.rowIndex="13" />

        <!-- Translate
==================================================

Fichier: src\main\resources\com\example\stage\database_alter.fxml
Package: src\main\resources\com\example\stage
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\resources\com\example\stage\database_alter.fxml
-----
<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.Button?>
<?import javafx.scene.control.Label?>
<?import javafx.scene.layout.VBox?>

<VBox xmlns="http://javafx.com/javafx/8.0.171" xmlns:fx="http://javafx.com/fxml/1"
      fx:controller="com.example.stage.controller.DatabaseAlterController">
    <Button text="Add New Column" onAction="#addNewColumn"/>
    <Button text="Modify Column" onAction="#modifyColumn"/>
    <Button text="Drop Column" onAction="#dropColumn"/>
    <Label fx:id="alterStatusLabel" text="Status"/>
</VBox>
==================================================

Fichier: src\main\resources\com\example\stage\editprofile.fxml
Package: src\main\resources\com\example\stage
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\resources\com\example\stage\editprofile.fxml
-----
<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.*?>
<?import javafx.scene.layout.*?>
<?import javafx.scene.text.*?>

<BorderPane fx:id="mainPane" xmlns="http://javafx.com/javafx/8" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.example.stage.controller.EditProfileController">
        <center>
                <VBox spacing="10" alignment="CENTER">
                        <Label text="Modifier le profil" style="-fx-font-size: 20px; -fx-font-weight: bold;"/>

                        <TextField fx:id="usernameField" promptText="Nom d'utilisateur"/>
                        <TextField fx:id="emailField" promptText="Email"/>
                        <PasswordField fx:id="passwordField" promptText="Mot de passe"/>
                        <TextField fx:id="diplomesField" promptText="Diplômes"/>

                        <Button text="Enregistrer les modifications" onAction="#handleSaveProfile"/>
                        <Button text="Annuler" onAction="#handleCancel"/>
                </VBox>
        </center>
</BorderPane>
==================================================

Fichier: src\main\resources\com\example\stage\entreprise-sign-up.fxml
Package: src\main\resources\com\example\stage
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\resources\com\example\stage\entreprise-sign-up.fxml
-----
<?xml version="1.0" encoding="UTF-8"?>
<?import javafx.scene.control.*?>
<?import javafx.scene.layout.*?>
<?import javafx.geometry.Insets?>

<VBox xmlns:fx="http://javafx.com/fxml/1"
      fx:controller="com.example.stage.controller.EntrepriseSignUpController"
      spacing="10" alignment="CENTER">
    <Label text="Inscription en tant qu'entreprise" style="-fx-font-size: 20px;" />

    <!-- Username Field -->
    <TextField fx:id="usernameField" promptText="Nom d'utilisateur" />

    <!-- Email Field -->
    <TextField fx:id="emailField" promptText="Email" />

    <!-- Password Field -->
    <PasswordField fx:id="motdepasseField" promptText="Mot de passe" />

    <!-- Enterprise Name Field -->
    <TextField fx:id="nomEntrepriseField" promptText="Nom de l'entreprise" />

    <!-- Sector Field -->
    <TextField fx:id="secteurActiviteField" promptText="Secteur d'activité" />

    <!-- Address Field -->
    <TextField fx:id="adresseField" promptText="Adresse" />

    <!-- Website Field -->
    <TextField fx:id="siteWebField" promptText="Site web" />

    <!-- Description Field -->
    <TextField fx:id="descriptionField" promptText="Description" />

    <!-- Sign Up Button -->
    <Button text="S'inscrire" onAction="#sInscrire" />

    <!-- Back Button -->
    <Button text="Retour" onAction="#retournerAuChoixInscription" />

    <!-- Message Label -->
    <Label fx:id="messageLabel" text="" style="-fx-text-fill: red;" />
</VBox>
==================================================

Fichier: src\main\resources\com\example\stage\entreprisehome.fxml
Package: src\main\resources\com\example\stage
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\resources\com\example\stage\entreprisehome.fxml
-----
<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.Button?>
<?import javafx.scene.control.Label?>
<?import javafx.scene.control.TextField?>
<?import javafx.scene.image.Image?>
<?import javafx.scene.image.ImageView?>
<?import javafx.scene.layout.BorderPane?>
<?import javafx.scene.layout.VBox?>
<?import javafx.scene.text.Font?>

<BorderPane xmlns="http://javafx.com/javafx/23.0.1" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.example.stage.controller.entreprisehome">
    <left>
        <VBox alignment="CENTER" prefHeight="183.0" prefWidth="87.0" spacing="20" style="-fx-background-color: #f4f4f4;">
            <ImageView fitHeight="136.0" fitWidth="139.0" pickOnBounds="true" preserveRatio="true">
                <image>
                    <Image url="@profile.jpg" />
                </image>
            </ImageView>
            <Button fx:id="changeThemeButton" onAction="#handleChangeTheme" text="Changer Thème" />
        </VBox>
    </left>
    <TextField fx:id="nameField" promptText="Entrez votre nom" />
    <TextField fx:id="surnameField" promptText="Entrez votre prénom" />
    <TextField fx:id="emailField" promptText="Entrez votre email" />
    <TextField fx:id="phoneField" promptText="Entrez votre téléphone" />
    <TextField fx:id="addressField" promptText="Entrez votre adresse" />

    <center>
        <VBox alignment="CENTER" prefHeight="273.0" prefWidth="357.0" spacing="20">
            <!-- Ajoutez ce Label pour afficher le message de bienvenue -->
            <Label fx:id="bienvenueLabel" prefHeight="0.0" prefWidth="239.0" text="Bienvenue !">
                <font>
                    <Font name="Arial" size="24" />
                </font>
            </Label>
            <Button fx:id="editProfileButton" onAction="#handleEditProfile" prefWidth="150" text="Modifier Profil" />
            <Button fx:id="demandetButton" onAction="#handledemande" prefWidth="150" text="gerer les demandes" />
            <Button fx:id="recrutementButton" onAction="#handlerecrutement" prefWidth="150" text="add recructement" />

            <Button fx:id="logoutButton" onAction="#handleLogout" prefWidth="150" text="Logout" />
        </VBox>
    </center>
</BorderPane>

==================================================

Fichier: src\main\resources\com\example\stage\first-page.fxml
Package: src\main\resources\com\example\stage
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\resources\com\example\stage\first-page.fxml
-----
<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.*?>
<?import javafx.scene.layout.*?>
<?import javafx.geometry.Insets?>

<VBox xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.example.stage.controller.FirstPageController" spacing="20" alignment="CENTER">
    <padding>
        <Insets top="20" right="20" bottom="20" left="20" />
    </padding>

    <!-- Welcome Label -->
    <Label text="Bienvenue sur EsprimCareer" style="-fx-font-size: 24px;" />

    <!-- Button to go directly to the login page -->
    <Button fx:id="loginButton" text="Se connecter" onAction="#redirectToLoginPage" />

    <!-- Button to create a new admin account -->
    <Button fx:id="signUpButton" text="S'inscrire" onAction="#redirectToSignUpChoicePage" />
</VBox>
==================================================

Fichier: src\main\resources\com\example\stage\hamma-signup.fxml
Package: src\main\resources\com\example\stage
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\resources\com\example\stage\hamma-signup.fxml
-----
<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.Button?>
<?import javafx.scene.control.Label?>
<?import javafx.scene.control.PasswordField?>
<?import javafx.scene.control.TextField?>
<?import javafx.scene.image.Image?>
<?import javafx.scene.image.ImageView?>
<?import javafx.scene.layout.ColumnConstraints?>
<?import javafx.scene.layout.GridPane?>
<?import javafx.scene.layout.RowConstraints?>

<GridPane alignment="center" hgap="15.0" prefHeight="463.0" prefWidth="666.0" vgap="15.0" xmlns="http://javafx.com/javafx/21.0.6" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.example.stage.controller.signupp">
    <!-- Titre -->
    <Label style="-fx-font-size: 24px; -fx-font-weight: bold;" text="Sign Up" GridPane.columnIndex="1" GridPane.rowIndex="0" />

    <!-- Username -->
    <Label style="-fx-font-size: 14px; -fx-font-weight: bold;" text="Username:" GridPane.columnIndex="0" GridPane.rowIndex="1" />
    <TextField fx:id="usernameField" prefWidth="250" style="-fx-border-radius: 5px; -fx-padding: 8px; -fx-font-size: 14px;" GridPane.columnIndex="1" GridPane.rowIndex="1" />

    <!-- Email -->
    <Label style="-fx-font-size: 14px; -fx-font-weight: bold;" text="Email:" GridPane.columnIndex="0" GridPane.rowIndex="2" />
    <TextField fx:id="emailField" prefWidth="250" style="-fx-border-radius: 5px; -fx-padding: 8px; -fx-font-size: 14px;" GridPane.columnIndex="1" GridPane.rowIndex="2" />

    <!-- Password -->
    <Label style="-fx-font-size: 14px; -fx-font-weight: bold;" text="Password:" GridPane.columnIndex="0" GridPane.rowIndex="3" />
    <PasswordField fx:id="passwordField" prefWidth="250" style="-fx-border-radius: 5px; -fx-padding: 8px; -fx-font-size: 14px;" GridPane.columnIndex="1" GridPane.rowIndex="3" />

    <!-- Error Label -->
    <Label fx:id="errorLabel" style="-fx-text-fill: red; -fx-font-size: 12px;" GridPane.columnIndex="1" GridPane.rowIndex="4" />

    <!-- Buttons -->
    <Button fx:id="registerButton" onAction="#registerUser" prefWidth="250" style="-fx-background-color: #4CAF50; -fx-text-fill: white; -fx-padding: 10px 20px; -fx-border-radius: 5px;" text="Register" GridPane.columnIndex="1" GridPane.rowIndex="5" />
    <Button fx:id="backButton" onAction="#handleBackToHome" prefWidth="250" style="-fx-background-color: #808080; -fx-text-fill: white; -fx-padding: 10px 20px; -fx-border-radius: 5px;" text="Back to Login" GridPane.columnIndex="0" GridPane.rowIndex="5" />

    <!-- Image Section -->
    <ImageView fitHeight="136.0" fitWidth="139.0" pickOnBounds="true" preserveRatio="true">
        <image>
            <Image url="@../../../images/profile.jpg" />
        </image>
    </ImageView>

    <!-- Layout adjustments -->
    <columnConstraints>
        <ColumnConstraints maxWidth="250" minWidth="150" />
        <ColumnConstraints maxWidth="250" minWidth="150" />
    </columnConstraints>

    <rowConstraints>
        <RowConstraints minHeight="40.0" />
        <RowConstraints minHeight="40.0" />
        <RowConstraints minHeight="40.0" />
        <RowConstraints minHeight="40.0" />
        <RowConstraints minHeight="40.0" />
        <RowConstraints minHeight="60.0" />
        <RowConstraints />
    </rowConstraints>
</GridPane>


==================================================

Fichier: src\main\resources\com\example\stage\hello-view.fxml
Package: src\main\resources\com\example\stage
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\resources\com\example\stage\hello-view.fxml
-----
<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.Button?>
<?import javafx.scene.control.Label?>
<?import javafx.scene.control.PasswordField?>
<?import javafx.scene.control.TextField?>
<?import javafx.scene.effect.DropShadow?>
<?import javafx.scene.image.Image?>
<?import javafx.scene.image.ImageView?>
<?import javafx.scene.layout.AnchorPane?>
<?import javafx.scene.layout.BorderPane?>
<?import javafx.scene.text.Font?>

<BorderPane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="400.0" prefWidth="600.0" xmlns="http://javafx.com/javafx/21.0" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.example.satge.HelloController">
   <left>
      <AnchorPane prefHeight="400.0" prefWidth="213.0" style="-fx-background-color: #263F73;" BorderPane.alignment="CENTER">
         <children>
            <ImageView fitHeight="400.0" fitWidth="218.0" focusTraversable="true" layoutX="1.0" pickOnBounds="true" preserveRatio="true">
               <image>
                  <Image url="@../../../images/profile.jpg" />
               </image>
            </ImageView>
            <Label alignment="CENTER" layoutX="27.0" layoutY="283.0" prefHeight="30.0" prefWidth="166.0" text="EsprimCareer" textAlignment="CENTER" textFill="WHITE">
               <font>
                  <Font name="Yu Gothic Medium" size="24.0" />
               </font>
            </Label>
            <ImageView fitHeight="182.0" fitWidth="221.0">
               <image>
                  <Image url="@../../../images/gg.png" />
               </image>
            </ImageView>
         </children>
      </AnchorPane>
   </left>
   <center>
      <AnchorPane prefHeight="500.0" prefWidth="332.0" BorderPane.alignment="CENTER">
         <children>
            <Label alignment="CENTER" layoutX="89.0" layoutY="36.0" prefHeight="17.0" prefWidth="217.0" text="Login Page" textFill="#ebe5e5">
               <font>
                  <Font name="Verdana Bold" size="24.0" />
               </font>
               <effect>
                  <DropShadow />
               </effect>
            </Label>
            <Label layoutX="45.0" layoutY="115.0" text="Username" />
            <Label layoutX="44.0" layoutY="153.0" text="Password" />

            <TextField fx:id="usernameTextField" layoutX="133.0" layoutY="111.0" promptText="Username" />
            <PasswordField fx:id="passwordPasswordField" layoutX="133.0" layoutY="150.0" promptText="Password" />

            <Button fx:id="loginButton" layoutX="74.0" layoutY="217.0" mnemonicParsing="false" onAction="#loginButtonOnAction" prefHeight="31.0" prefWidth="225.0" text="Login" />
            <Button fx:id="cancelButton" layoutX="71.0" layoutY="276.0" mnemonicParsing="false" onAction="#cancelButtonAction" prefHeight="31.0" prefWidth="230.0" text="Cancel" />

            <!-- Nouveau bouton Sign Up -->
            <Button fx:id="signUpButton" layoutX="71.0" layoutY="320.0" mnemonicParsing="false" onAction="#goToSignUp" prefHeight="31.0" prefWidth="230.0" text="Sign Up" />

            <Label fx:id="loginMessageLabel" alignment="CENTER" layoutX="107.0" layoutY="75.0" prefHeight="18.0" prefWidth="178.0" />
         </children>
      </AnchorPane>
   </center>
</BorderPane>

==================================================

Fichier: src\main\resources\com\example\stage\home.fxml
Package: src\main\resources\com\example\stage
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\resources\com\example\stage\home.fxml
-----
<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.*?>
<?import javafx.scene.image.Image?>
<?import javafx.scene.image.ImageView?>
<?import javafx.scene.layout.BorderPane?>
<?import javafx.scene.layout.VBox?>
<?import javafx.scene.text.Font?>

<BorderPane xmlns="http://javafx.com/javafx/8" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.example.stage.controller.HomeController">
    <left>
        <VBox alignment="CENTER" spacing="20" style="-fx-background-color: #f4f4f4;">
            <ImageView fitHeight="136.0" fitWidth="139.0" pickOnBounds="true" preserveRatio="true">
                <image>
                    <Image url="@profile.jpg" />
                </image>
            </ImageView>
            <Button text="Changer Thème" fx:id="changeThemeButton" onAction="#handleChangeTheme"/>
        </VBox>
    </left>
    <TextField fx:id="nameField" promptText="Entrez votre nom" />
    <TextField fx:id="surnameField" promptText="Entrez votre prénom" />
    <TextField fx:id="emailField" promptText="Entrez votre email" />
    <TextField fx:id="phoneField" promptText="Entrez votre téléphone" />
    <TextField fx:id="addressField" promptText="Entrez votre adresse" />

    <center>
        <VBox alignment="CENTER" spacing="20">
            <!-- Ajoutez ce Label pour afficher le message de bienvenue -->
            <Label fx:id="bienvenueLabel" text="Bienvenue !">
                <font>
                    <Font name="Arial" size="24" />
                </font>
            </Label>
            <Button text="Modifier Profil" fx:id="editProfileButton" onAction="#handleEditProfile" prefWidth="150"/>
            <Button text="Créer CV" fx:id="createCVButton" onAction="#handleCreateCV" prefWidth="150"/>
            <Button text="Entretien" fx:id="interviewButton" onAction="#handleInterview" prefWidth="150"/>
            <Button text="Communication" fx:id="communicationButton" onAction="#handleCommunication" prefWidth="150"/>
            <Button text="Logout" fx:id="logoutButton" onAction="#handleLogout" prefWidth="150"/>
        </VBox>
    </center>
</BorderPane>
==================================================

Fichier: src\main\resources\com\example\stage\homechercheur.fxml
Package: src\main\resources\com\example\stage
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\resources\com\example\stage\homechercheur.fxml
-----
<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.*?>
<?import javafx.scene.image.Image?>
<?import javafx.scene.image.ImageView?>
<?import javafx.scene.layout.BorderPane?>
<?import javafx.scene.layout.VBox?>
<?import javafx.scene.text.Font?>

<BorderPane xmlns="http://javafx.com/javafx/8" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.example.stage.controller.HomeChercheurController">
    <left>
        <VBox alignment="CENTER" spacing="20" style="-fx-background-color: #f4f4f4;">
            <ImageView fitHeight="136.0" fitWidth="139.0" pickOnBounds="true" preserveRatio="true">
                <image>
                    <Image url="@profile.jpg" />
                </image>
            </ImageView>
            <Button text="Changer Thème" fx:id="changeThemeButton" onAction="#handleChangeTheme"/>
        </VBox>
    </left>
    <TextField fx:id="nameField" promptText="Entrez votre nom" />
    <TextField fx:id="surnameField" promptText="Entrez votre prénom" />
    <TextField fx:id="emailField" promptText="Entrez votre email" />
    <TextField fx:id="phoneField" promptText="Entrez votre téléphone" />
    <TextField fx:id="addressField" promptText="Entrez votre adresse" />

    <center>
        <VBox alignment="CENTER" spacing="20">
            <Label text="Bienvenue Chercheur">
                <font>
                    <Font name="Arial" size="24" />
                </font>
            </Label>
            <Button text="Modifier Profil" fx:id="editProfileButton" onAction="#handleEditProfile" prefWidth="150"/>
            <Button text="Créer CV" fx:id="createCVButton" onAction="#handleCreateCV" prefWidth="150"/>
            <Button text="Entretien" fx:id="interviewButton" onAction="#handleInterview" prefWidth="150"/>
            <Button text="Communication" fx:id="communicationButton" onAction="#handleCommunication" prefWidth="150"/>
            <Button text="Logout" fx:id="logoutButton" onAction="#handleLogout" prefWidth="150"/>
        </VBox>
    </center>
</BorderPane>
==================================================

Fichier: src\main\resources\com\example\stage\login.fxml
Package: src\main\resources\com\example\stage
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\resources\com\example\stage\login.fxml
-----
<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.*?>
<?import javafx.scene.layout.VBox?>
<?import javafx.scene.text.Text?>

<VBox xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.example.stage.controller.LoginController" spacing="10" alignment="CENTER">
    <Text style="-fx-font-size: 24px;" text="Se Connecter" />

    <!-- Email Field -->
    <Label text="Email :" />
    <TextField fx:id="emailField" promptText="Entrez votre email" />

    <!-- Password Field -->
    <Label text="Mot de passe :" />
    <PasswordField fx:id="motdepasseField" promptText="Entrez votre mot de passe" />

    <!-- Login Button -->
    <Button text="Se Connecter" onAction="#seConnecter" />

    <!-- Link to Sign-Up Choice Page -->
    <Hyperlink fx:id="inscriptionLink" text="S'inscrire" onAction="#allerVersInscription" />

    <!-- Status Message -->
    <Label fx:id="messageLabel" style="-fx-text-fill: red;" />
</VBox>
==================================================

Fichier: src\main\resources\com\example\stage\page1.fxml
Package: src\main\resources\com\example\stage
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\resources\com\example\stage\page1.fxml
-----
<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.Button?>
<?import javafx.scene.control.ComboBox?>
<?import javafx.scene.control.DatePicker?>
<?import javafx.scene.control.Label?>
<?import javafx.scene.control.ScrollPane?>
<?import javafx.scene.control.TextArea?>
<?import javafx.scene.control.TextField?>
<?import javafx.scene.image.Image?>
<?import javafx.scene.image.ImageView?>
<?import javafx.scene.layout.AnchorPane?>
<?import javafx.scene.layout.ColumnConstraints?>
<?import javafx.scene.layout.GridPane?>
<?import javafx.scene.layout.HBox?>
<?import javafx.scene.layout.RowConstraints?>
<?import javafx.scene.layout.VBox?>

<AnchorPane prefHeight="600.0" prefWidth="900.0" xmlns="http://javafx.com/javafx/21" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.example.stage.controller.Page1Controller">
    <ImageView fitHeight="109.0" fitWidth="140.0" layoutY="20.0" pickOnBounds="true" preserveRatio="true">
        <image>
            <Image url="@../../../images/logo.png" />
        </image>
    </ImageView>

    <!-- Logo Image Right -->
    <ImageView fitHeight="46.0" fitWidth="119.0" layoutX="729.0" layoutY="51.0" pickOnBounds="true" preserveRatio="true" AnchorPane.rightAnchor="10.0">
        <image>
            <Image url="@../../../images/esprim.png" />
        </image>
    </ImageView>

    <ScrollPane fitToHeight="true" fitToWidth="true" hbarPolicy="NEVER" vbarPolicy="ALWAYS" AnchorPane.bottomAnchor="10.0" AnchorPane.leftAnchor="10.0" AnchorPane.rightAnchor="10.0" AnchorPane.topAnchor="126.0">
        <VBox fillWidth="true" spacing="10" style="-fx-padding: 20px;">
            <!-- Language Selection -->
            <HBox spacing="10">
                <ComboBox fx:id="languageComboBox" prefHeight="21.0" prefWidth="113.0" />
                <Button fx:id="translateButton" onAction="#translatePage" style="-fx-background-color: #E31A22; -fx-text-fill: white;" text="Translate" />
            </HBox>

            <!-- Personal Information Section -->
            <VBox spacing="10">
                <Label fx:id="personalInformationLabel" style="-fx-font-weight: bold; -fx-text-fill: #E31A22;" text="Personal Information" />
                <GridPane hgap="10" vgap="10">
                    <Label fx:id="fullNameLabel" text="Full Name" GridPane.columnIndex="0" GridPane.rowIndex="0" />
                    <TextField fx:id="nameField" prefHeight="22.0" prefWidth="471.0" text="Mohamed Abidi" GridPane.columnIndex="1" GridPane.rowIndex="0" />

                    <Label fx:id="emailLabel" text="Email" GridPane.columnIndex="0" GridPane.rowIndex="1" />
                    <TextField fx:id="emailField" text="mohamed.abidi@example.com" GridPane.columnIndex="1" GridPane.rowIndex="1" />

                    <Label fx:id="phoneLabel" text="Phone" GridPane.columnIndex="0" GridPane.rowIndex="2" />
                    <TextField fx:id="phoneField" text="+21612345678" GridPane.columnIndex="1" GridPane.rowIndex="2" />

                    <Label fx:id="addressLabel" text="Address" GridPane.columnIndex="0" GridPane.rowIndex="3" />
                    <TextArea fx:id="addressArea" text="123 Rue de Tunis, Tunis, Tunisia" GridPane.columnIndex="1" GridPane.rowIndex="3" />

                    <Label fx:id="linkedinLabel" text="LinkedIn" GridPane.columnIndex="0" GridPane.rowIndex="4" />
                    <TextField fx:id="linkedinField" text="linkedin.com/in/mohamedabidi" GridPane.columnIndex="1" GridPane.rowIndex="4" />

                    <Label fx:id="portfolioLabel" text="Portfolio" GridPane.columnIndex="0" GridPane.rowIndex="5" />
                    <TextField fx:id="portfolioField" text="mohamedabidi.com" GridPane.columnIndex="1" GridPane.rowIndex="5" />
                    <columnConstraints>
                        <ColumnConstraints maxWidth="104.0" minWidth="59.0" prefWidth="104.0" />
                        <ColumnConstraints maxWidth="473.0" minWidth="428.0" prefWidth="428.0" />
                    </columnConstraints>
                    <rowConstraints>
                        <RowConstraints />
                        <RowConstraints />
                        <RowConstraints />
                        <RowConstraints />
                        <RowConstraints />
                        <RowConstraints />
                    </rowConstraints>
                </GridPane>
            </VBox>

            <!-- Summary Section -->
            <VBox spacing="10">
                <Label fx:id="summaryObjectiveLabel" style="-fx-font-weight: bold; -fx-text-fill: #E31A22;" text="Summary / Objective" />
                <HBox spacing="10">
                    <TextArea fx:id="summaryArea" prefHeight="40.0" prefWidth="541.0" text="Experienced software engineer with a strong background in developing scalable web applications." />
                    <Button onAction="#showSummaryHelp" style="-fx-background-color: #E31A22; -fx-text-fill: white;" text="ⓘ" />
                </HBox>
            </VBox>

            <!-- Education Section -->
            <VBox spacing="10">
                <Label fx:id="educationLabel" style="-fx-font-weight: bold; -fx-text-fill: #E31A22;" text="Education" />
                <VBox fx:id="educationContainer" spacing="5">
                    <GridPane hgap="10" vgap="10">
                        <Label text="Degree" GridPane.rowIndex="0" />
                        <TextField fx:id="degreeField" GridPane.columnIndex="1" GridPane.rowIndex="0" />
                        <Label text="Institution" GridPane.rowIndex="1" />
                        <TextField fx:id="institutionField" GridPane.columnIndex="1" GridPane.rowIndex="1" />
                        <Label text="Graduation Date" GridPane.rowIndex="2" />
                        <DatePicker fx:id="graduationDateField" GridPane.columnIndex="1" GridPane.rowIndex="2" />
                        <columnConstraints>
                            <ColumnConstraints maxWidth="109.0" minWidth="93.0" prefWidth="106.0" />
                            <ColumnConstraints maxWidth="169.0" minWidth="153.0" prefWidth="156.0" />
                        </columnConstraints>
                        <rowConstraints>
                            <RowConstraints />
                            <RowConstraints />
                            <RowConstraints />
                        </rowConstraints>
                    </GridPane>
                </VBox>
                <Button fx:id="addEducationButton" onAction="#addEducation" style="-fx-background-color: #E31A22; -fx-text-fill: white;" text="Add Education" />
            </VBox>

            <!-- Work Experience Section -->
            <VBox spacing="10">
                <Label fx:id="workExperienceLabel" style="-fx-font-weight: bold; -fx-text-fill: #E31A22;" text="Work Experience" />
                <VBox fx:id="workExperienceContainer" spacing="5">
                    <GridPane hgap="10" vgap="10">
                        <Label text="Job Title" />
                        <TextField fx:id="jobTitleField" GridPane.columnIndex="1" />
                        <Label text="Company" GridPane.rowIndex="1" />
                        <TextField fx:id="companyField" GridPane.columnIndex="1" GridPane.rowIndex="1" />
                        <Label text="Description" GridPane.rowIndex="2" />
                        <TextArea fx:id="descriptionArea" prefHeight="60" GridPane.columnIndex="1" GridPane.rowIndex="2" />
                        <columnConstraints>
                            <ColumnConstraints />
                            <ColumnConstraints />
                        </columnConstraints>
                        <rowConstraints>
                            <RowConstraints />
                            <RowConstraints />
                            <RowConstraints />
                        </rowConstraints>
                    </GridPane>
                </VBox>
                <Button fx:id="addWorkExperienceButton" onAction="#addWorkExperience" style="-fx-background-color: #E31A22; -fx-text-fill: white;" text="Add Work Experience" />
            </VBox>

            <!-- Footer Buttons -->
            <HBox alignment="CENTER" spacing="10">
                <Button fx:id="autoFillButton" onAction="#autoFillForm" style="-fx-background-color: #E31A22; -fx-text-fill: white;" text="Auto Fill" />
                <Button fx:id="nextButton" onAction="#goToPage2" style="-fx-background-color: #E31A22; -fx-text-fill: white;" text="Next" />
            </HBox>
        </VBox>
    </ScrollPane>
    <ImageView fitHeight="100.0" fitWidth="150.0" layoutX="231.0" layoutY="22.0" pickOnBounds="true" preserveRatio="true">
        <image>
            <Image url="@../../../images/tunisie-removebg-preview.png" />
        </image>
    </ImageView>
</AnchorPane>
==================================================

Fichier: src\main\resources\com\example\stage\page2.fxml
Package: src\main\resources\com\example\stage
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\resources\com\example\stage\page2.fxml
-----
<?xml version="1.0" encoding="UTF-8"?>

<?import java.lang.String?>
<?import javafx.collections.FXCollections?>
<?import javafx.scene.control.Button?>
<?import javafx.scene.control.ComboBox?>
<?import javafx.scene.control.DatePicker?>
<?import javafx.scene.control.Label?>
<?import javafx.scene.control.ScrollPane?>
<?import javafx.scene.control.TextArea?>
<?import javafx.scene.control.TextField?>
<?import javafx.scene.image.Image?>
<?import javafx.scene.image.ImageView?>
<?import javafx.scene.layout.AnchorPane?>
<?import javafx.scene.layout.ColumnConstraints?>
<?import javafx.scene.layout.GridPane?>
<?import javafx.scene.layout.HBox?>
<?import javafx.scene.layout.RowConstraints?>
<?import javafx.scene.layout.VBox?>

<AnchorPane prefHeight="600.0" prefWidth="900.0" xmlns="http://javafx.com/javafx/21" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.example.stage.controller.Page2Controller">
    <!-- Images at the top -->
    <ImageView fitHeight="109.0" fitWidth="140.0" layoutY="20.0" pickOnBounds="true" preserveRatio="true">
        <image>
            <Image url="@../../../images/logo.png" />
        </image>
    </ImageView>

    <!-- Logo Image Right -->
    <ImageView fitHeight="46.0" fitWidth="119.0" layoutX="729.0" layoutY="51.0" pickOnBounds="true" preserveRatio="true" AnchorPane.rightAnchor="10.0">
        <image>
            <Image url="@../../../images/esprim.png" />
        </image>
    </ImageView>

    <HBox alignment="CENTER" layoutX="557.0" layoutY="8.0" prefHeight="109.0" prefWidth="335.0" spacing="20" AnchorPane.leftAnchor="557.0" AnchorPane.rightAnchor="8.0" AnchorPane.topAnchor="8.0">
        <!-- Logo Image Right -->
    </HBox>

    <ScrollPane fitToHeight="true" fitToWidth="true" hbarPolicy="NEVER" layoutY="126.0" prefHeight="464.0" prefWidth="888.0" vbarPolicy="ALWAYS" AnchorPane.bottomAnchor="10.0" AnchorPane.leftAnchor="10.0" AnchorPane.rightAnchor="10.0" AnchorPane.topAnchor="126.0">
        <VBox alignment="CENTER" prefHeight="630.0" prefWidth="859.0" spacing="10" style="-fx-padding: 20px;">
            <GridPane alignment="CENTER" hgap="10" maxWidth="Infinity" prefHeight="598.0" prefWidth="825.0" vgap="10">
                <!-- Section: Skills -->
                <Label fx:id="skillsLabel" style="-fx-font-weight: bold; -fx-text-fill: #E31A22;" text="Skills" GridPane.columnSpan="2" GridPane.rowIndex="0" />
                <HBox GridPane.columnSpan="2" GridPane.rowIndex="1">
                    <TextField fx:id="skillsField" />
                    <Button onAction="#showSkillsHelp" style="-fx-background-color: #E31A22; -fx-text-fill: white; -fx-font-weight: bold;" text="?" />
                </HBox>

                <!-- Section: Projects -->
                <Label fx:id="projectsLabel" style="-fx-font-weight: bold; -fx-text-fill: #E31A22;" text="Projects" GridPane.columnSpan="2" GridPane.rowIndex="2" />
                <VBox fx:id="projectsContainer" spacing="5" GridPane.columnSpan="2" GridPane.rowIndex="3">
                    <GridPane hgap="5" vgap="5">
                        <Label text="Project Name:" GridPane.columnIndex="0" GridPane.rowIndex="0" />
                        <TextField fx:id="projectNameField" GridPane.columnIndex="1" GridPane.rowIndex="0" />
                        <Label text="Project Description:" GridPane.columnIndex="0" GridPane.rowIndex="1" />
                        <HBox GridPane.columnIndex="1" GridPane.rowIndex="1">
                            <TextArea fx:id="projectDescriptionArea" prefHeight="60" />
                            <Button onAction="#showProjectHelp" style="-fx-background-color: #E31A22; -fx-text-fill: white; -fx-font-weight: bold;" text="?" />
                        </HBox>
                        <Button onAction="#addProject" style="-fx-background-color: #E31A22; -fx-text-fill: white;" text="Add Project" GridPane.columnIndex="1" GridPane.rowIndex="2" />
                        <columnConstraints>
                            <ColumnConstraints />
                            <ColumnConstraints />
                        </columnConstraints>
                        <rowConstraints>
                            <RowConstraints />
                            <RowConstraints />
                            <RowConstraints />
                        </rowConstraints>
                    </GridPane>
                </VBox>

                <!-- Section: Certificates -->
                <Label fx:id="certificatesLabel" style="-fx-font-weight: bold; -fx-text-fill: #E31A22;" text="Certificates" GridPane.columnSpan="2" GridPane.rowIndex="4" />
                <VBox fx:id="certificatesContainer" spacing="5" GridPane.columnSpan="2" GridPane.rowIndex="5">
                    <GridPane hgap="5" vgap="5">
                        <Label text="Certificate Name:" GridPane.columnIndex="0" GridPane.rowIndex="0" />
                        <TextField fx:id="certificateNameField" GridPane.columnIndex="1" GridPane.rowIndex="0" />
                        <Label text="Institution:" GridPane.columnIndex="0" GridPane.rowIndex="1" />
                        <TextField fx:id="certificateInstitutionField" GridPane.columnIndex="1" GridPane.rowIndex="1" />
                        <Label text="Date of Receipt:" GridPane.columnIndex="0" GridPane.rowIndex="2" />
                        <DatePicker fx:id="certificateDateField" GridPane.columnIndex="1" GridPane.rowIndex="2" />
                        <Button onAction="#addCertificate" style="-fx-background-color: #E31A22; -fx-text-fill: white;" text="Add Certificate" GridPane.columnIndex="1" GridPane.rowIndex="3" />
                        <columnConstraints>
                            <ColumnConstraints />
                            <ColumnConstraints />
                        </columnConstraints>
                        <rowConstraints>
                            <RowConstraints />
                            <RowConstraints />
                            <RowConstraints />
                            <RowConstraints />
                        </rowConstraints>
                    </GridPane>
                </VBox>

                <!-- Section: Languages -->
                <Label fx:id="languagesLabel" style="-fx-font-weight: bold; -fx-text-fill: #E31A22;" text="Languages" GridPane.columnSpan="2" GridPane.rowIndex="6" />
                <VBox fx:id="languagesContainer" spacing="5" GridPane.columnSpan="2" GridPane.rowIndex="7">
                    <GridPane hgap="5" vgap="5">
                        <Label text="Language:" GridPane.columnIndex="0" GridPane.rowIndex="0" />
                        <TextField fx:id="languageField" GridPane.columnIndex="1" GridPane.rowIndex="0" />
                        <Label text="Proficiency Level:" GridPane.columnIndex="0" GridPane.rowIndex="1" />
                        <ComboBox fx:id="languageProficiencyField" GridPane.columnIndex="1" GridPane.rowIndex="1">
                            <items>
                                <FXCollections fx:factory="observableArrayList">
                                    <String fx:value="A1 (Beginner)" />      <!-- A1: Basic user, beginner level -->
                                    <String fx:value="A2 (Elementary)" />    <!-- A2: Basic user, elementary level -->
                                    <String fx:value="B1 (Intermediate)" />  <!-- B1: Independent user, intermediate level -->
                                    <String fx:value="B2 (Upper Intermediate)" /> <!-- B2: Independent user, upper intermediate level -->
                                    <String fx:value="C1 (Advanced)" />      <!-- C1: Proficient user, advanced level -->
                                    <String fx:value="C2 (Bilingual)" />     <!-- C2: Proficient user, near-native fluency -->

                                </FXCollections>
                            </items>
                        </ComboBox>
                        <Button onAction="#addLanguage" style="-fx-background-color: #E31A22; -fx-text-fill: white;" text="Add Language" GridPane.columnIndex="1" GridPane.rowIndex="2" />
                        <columnConstraints>
                            <ColumnConstraints />
                            <ColumnConstraints />
                        </columnConstraints>
                        <rowConstraints>
                            <RowConstraints />
                            <RowConstraints />
                            <RowConstraints />
                        </rowConstraints>
                    </GridPane>
                </VBox>

                <!-- Back and Translate Buttons -->
                <Button fx:id="backButton" onAction="#goToPage1" style="-fx-background-color: #E31A22; -fx-text-fill: white;" text="Back" GridPane.columnIndex="0" GridPane.rowIndex="8" />
                <ComboBox fx:id="languageComboBox" GridPane.columnIndex="0" GridPane.rowIndex="9" />
                <Button fx:id="translateButton" onAction="#translatePage" style="-fx-background-color: #E31A22; -fx-text-fill: white;" text="Translate" GridPane.columnIndex="1" GridPane.rowIndex="9" />

                <!-- Generate PDF Button -->
                <Button fx:id="generatePDFButton" onAction="#generatePDF" style="-fx-background-color: #E31A22; -fx-text-fill: white;" text="Generate PDF" GridPane.columnIndex="1" GridPane.rowIndex="10" />
                <Button fx:id="autoFillButton" text="Auto Fill" onAction="#autoFillForm" GridPane.columnIndex="1" GridPane.rowIndex="11" />
                <columnConstraints>
                    <ColumnConstraints />
                    <ColumnConstraints />
                </columnConstraints>
                <rowConstraints>
                    <RowConstraints />
                    <RowConstraints />
                    <RowConstraints />
                    <RowConstraints />
                    <RowConstraints />
                    <RowConstraints />
                    <RowConstraints />
                    <RowConstraints />
                    <RowConstraints />
                    <RowConstraints />
                    <RowConstraints />
                    <RowConstraints />
                </rowConstraints>
            </GridPane>
        </VBox>
    </ScrollPane>

    <!-- Logo Image Left -->

    <ImageView fitHeight="100.0" fitWidth="150.0" layoutX="231.0" layoutY="22.0" pickOnBounds="true" preserveRatio="true">
        <image>
            <Image url="@../../../images/tunisie-removebg-preview.png" />
        </image>
    </ImageView>
</AnchorPane>
==================================================

Fichier: src\main\resources\com\example\stage\sign-up-choice.fxml
Package: src\main\resources\com\example\stage
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\resources\com\example\stage\sign-up-choice.fxml
-----
<?xml version="1.0" encoding="UTF-8"?>
<?import javafx.scene.control.*?>
<?import javafx.scene.layout.*?>
<?import javafx.geometry.Insets?>

<VBox xmlns:fx="http://javafx.com/fxml/1"
      fx:controller="com.example.stage.controller.SignUpChoiceController"
      spacing="20" alignment="CENTER">
    <Label text="Choisissez votre rôle" style="-fx-font-size: 24px;" />

    <!-- Button to register as a job seeker -->
    <Button fx:id="chercheurEmploiButton" text="Chercheur emploi" onAction="#redirectToChercheurEmploiSignUpPage" />

    <!-- Button to register as an enterprise -->
    <Button fx:id="entrepriseButton" text="Entreprise" onAction="#redirectToEntrepriseSignUpPage" />

    <!-- Button to go back to the first page -->
    <Button fx:id="retourButton" text="Retour" onAction="#redirectToFirstPage" />
</VBox>
==================================================

Fichier: src\main\resources\com\example\stage\sign-up.fxml
Package: src\main\resources\com\example\stage
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\resources\com\example\stage\sign-up.fxml
-----
<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.*?>
<?import javafx.scene.layout.*?>
<?import javafx.geometry.Insets?>

<?import javafx.collections.FXCollections?>
<?import java.lang.String?>
<VBox xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.example.stage.controller.SignUpController" spacing="10">
    <padding>
        <Insets top="10" right="10" bottom="10" left="10" />
    </padding>
    <Label text="S'inscrire" style="-fx-font-size: 18px;" />
    <GridPane hgap="10" vgap="10">
        <Label text="Nom d'utilisateur:" GridPane.rowIndex="0" GridPane.columnIndex="0" />
        <TextField fx:id="usernameField" GridPane.rowIndex="0" GridPane.columnIndex="1" />

        <Label text="Email:" GridPane.rowIndex="1" GridPane.columnIndex="0" />
        <TextField fx:id="emailField" GridPane.rowIndex="1" GridPane.columnIndex="1" />

        <Label text="Mot de passe:" GridPane.rowIndex="2" GridPane.columnIndex="0" />
        <PasswordField fx:id="motdepasseField" GridPane.rowIndex="2" GridPane.columnIndex="1" />

        <Label text="Rôle:" GridPane.rowIndex="3" GridPane.columnIndex="0" />
        <ComboBox fx:id="roleComboBox" GridPane.rowIndex="3" GridPane.columnIndex="1">
            <items>
                <FXCollections fx:factory="observableArrayList">
                    <String fx:value="chercheur_emploi" />
                    <String fx:value="entreprise" />
                </FXCollections>
            </items>
        </ComboBox>
    </GridPane>
    <Button text="S'inscrire" onAction="#sInscrire" />
    <Label fx:id="messageLabel" text="" style="-fx-text-fill: red;" />
</VBox>
==================================================

Fichier: src\main\resources\com\example\stage\skills_module.fxml
Package: src\main\resources\com\example\stage
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\resources\com\example\stage\skills_module.fxml
-----
<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.*?>
<?import javafx.scene.layout.*?>

<AnchorPane xmlns="http://javafx.com/javafx"
            xmlns:fx="http://javafx.com/fxml"
            fx:controller="your.package.name.SkillsController">

    <!-- Section pour gérer les compétences -->
    <VBox spacing="10" layoutX="20" layoutY="20" prefWidth="360">
        <Label text="Skills (Compétences)" style="-fx-font-size: 18px; -fx-text-fill: red;" />

        <!-- TextField pour saisir une compétence -->
        <TextField fx:id="skillsTextField" promptText="Saisissez une compétence..." />

        <!-- Boutons -->
        <HBox spacing="10">
            <Button text="Add Skill" onAction="#onAddSkill" />
            <Button text="Delete Selected Skill" onAction="#onDeleteSelectedSkill" />
        </HBox>

        <!-- Liste des compétences -->
        <ListView fx:id="skillsListView" prefHeight="200" />
    </VBox>

</AnchorPane>
==================================================

Fichier: src\main\resources\com\example\stage\users-list.fxml
Package: src\main\resources\com\example\stage
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\resources\com\example\stage\users-list.fxml
-----
<?xml version="1.0" encoding="UTF-8"?>
<?import javafx.scene.control.ListView?>
<?import javafx.scene.control.Button?>
<?import javafx.scene.layout.VBox?>
<?import javafx.scene.control.Label?>

<VBox xmlns="http://javafx.com/javafx/23.0.1" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.example.satge.UsersListController" spacing="10" alignment="CENTER">
    <Label text="List of Users" style="-fx-font-size: 20px; -fx-font-weight: bold;"/>

    <ListView fx:id="usersListView" prefWidth="300" prefHeight="400"/>

    <Button text="Back to Home" onAction="#goToHome"/>
</VBox>

==================================================

Fichier: src\main\resources\com\example\stage\welcome.fxml
Package: src\main\resources\com\example\stage
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\src\main\resources\com\example\stage\welcome.fxml
-----
<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.geometry.Rectangle2D?>
<?import javafx.scene.image.Image?>
<?import javafx.scene.image.ImageView?>
<?import javafx.scene.layout.AnchorPane?>
<?import javafx.scene.layout.ColumnConstraints?>
<?import javafx.scene.layout.GridPane?>
<?import javafx.scene.layout.HBox?>
<?import javafx.scene.layout.RowConstraints?>
<?import javafx.scene.layout.StackPane?>
<?import javafx.scene.shape.Rectangle?>

<AnchorPane prefHeight="600.0" prefWidth="900.0" xmlns="http://javafx.com/javafx/21" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.example.stage.controller.WelcomeController">
    <StackPane prefHeight="600.0" prefWidth="900.0" AnchorPane.bottomAnchor="6.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="8.0" AnchorPane.topAnchor="0.0">
        <!-- Background Rectangle -->
        <Rectangle fill="#ffffff" height="600.0" width="900.0" />

        <!-- Top Logos -->
        <HBox alignment="CENTER" spacing="20.0" style="-fx-padding: 20px;">
            <GridPane prefHeight="586.0" prefWidth="930.0">
                <columnConstraints>
                    <ColumnConstraints maxWidth="129.0" minWidth="0.0" prefWidth="82.0" />
                    <ColumnConstraints maxWidth="134.0" minWidth="0.0" prefWidth="96.0" />
               <ColumnConstraints hgrow="SOMETIMES" maxWidth="354.0" minWidth="0.0" prefWidth="138.0" />
               <ColumnConstraints hgrow="SOMETIMES" maxWidth="516.0" minWidth="10.0" prefWidth="353.0" />
               <ColumnConstraints hgrow="SOMETIMES" maxWidth="274.0" minWidth="10.0" prefWidth="191.0" />
                </columnConstraints>
                <rowConstraints>
               <RowConstraints maxHeight="195.0" minHeight="10.0" prefHeight="107.0" />
               <RowConstraints maxHeight="184.0" minHeight="10.0" prefHeight="101.0" />
                    <RowConstraints maxHeight="184.0" minHeight="0.0" prefHeight="100.0" />
                    <RowConstraints maxHeight="139.0" minHeight="10.0" prefHeight="83.0" vgrow="SOMETIMES" />
               <RowConstraints maxHeight="205.0" minHeight="10.0" prefHeight="82.0" vgrow="SOMETIMES" />
               <RowConstraints maxHeight="341.0" minHeight="10.0" prefHeight="79.0" vgrow="SOMETIMES" />
               <RowConstraints maxHeight="324.0" minHeight="0.0" prefHeight="64.0" vgrow="SOMETIMES" />
               <RowConstraints maxHeight="324.0" minHeight="0.0" prefHeight="0.0" vgrow="SOMETIMES" />
                </rowConstraints>
                <children>
                <ImageView fitHeight="96.0" fitWidth="130.0" pickOnBounds="true" preserveRatio="true" GridPane.columnIndex="4" GridPane.halignment="LEFT" GridPane.rowSpan="2" GridPane.valignment="TOP">
                    <image>
                        <Image url="@../../../images/tunisie-removebg-preview.png" />
                    </image>
                </ImageView>
                    <ImageView fitHeight="217.0" fitWidth="210.0" pickOnBounds="true" preserveRatio="true" GridPane.columnIndex="3" GridPane.halignment="CENTER" GridPane.rowIndex="5">
                        <image>
                            <Image url="@../../../images/esprit-removebg-preview.png" />
                        </image>
                        <viewport>
                            <Rectangle2D />
                        </viewport>
                    </ImageView>
                    <ImageView fitHeight="75.0" fitWidth="212.0" pickOnBounds="true" preserveRatio="true" GridPane.columnIndex="3" GridPane.halignment="CENTER" GridPane.rowIndex="3">
                        <image>
                            <Image url="@../../../images/esprim.png" />
                        </image>
                    </ImageView>
                    <ImageView fitHeight="152.0" fitWidth="152.0" pickOnBounds="true" preserveRatio="true" GridPane.columnIndex="2" GridPane.halignment="CENTER">
                        <image>
                            <Image url="@../../../images/unnamed-removebg-preview.png" />
                        </image>
                    </ImageView>
                    <ImageView fitHeight="213.0" fitWidth="203.0" GridPane.columnIndex="3" GridPane.halignment="CENTER" GridPane.rowIndex="2">
                        <image>
                            <Image url="@../../../images/espritprepa-removebg-preview.png" />
                        </image>
                    </ImageView>
                  <ImageView fitHeight="124.0" fitWidth="210.0" nodeOrientation="INHERIT" pickOnBounds="true" preserveRatio="true" GridPane.columnIndex="3" GridPane.halignment="CENTER" GridPane.valignment="CENTER">

                      <image>
                          <Image url="@../../../images/logo.png" />
                      </image>
                  <viewport>
                     <Rectangle2D />
                  </viewport>
                  </ImageView>
                    <ImageView fitHeight="103.0" fitWidth="187.0" pickOnBounds="true" preserveRatio="true" GridPane.columnIndex="3" GridPane.halignment="CENTER" GridPane.rowIndex="4">
                        <image>
                            <Image url="@../../../images/espritesb.png" />
                      </image>
                  </ImageView>

                 <!-- Rotating Gear Animation -->
                 <ImageView fx:id="loadingGear" fitHeight="80.0" fitWidth="80.0" GridPane.columnIndex="3" GridPane.halignment="CENTER" GridPane.rowIndex="6">
                     <image>
                         <Image url="@../../../images/gear.png" />
                     </image>
                 </ImageView>
                </children>
            </GridPane>
        </HBox>
    </StackPane>
</AnchorPane>

==================================================

Fichier: pom.xml
Package: 
Chemin complet: C:\Users\Sh-Pc\Desktop\HomeFORNOW\KHEDMA\pom.xml
-----
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>
    <artifactId>satge</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>satge</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <junit.version>5.10.2</junit.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>21</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>21</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-web</artifactId>
            <version>21</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-swing</artifactId>
            <version>21</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-media</artifactId>
            <version>21</version>
        </dependency>
        <dependency>
            <groupId>org.apache.pdfbox</groupId>
            <artifactId>pdfbox</artifactId>
            <version>2.0.27</version>
        </dependency>
        <dependency>
            <groupId>org.controlsfx</groupId>
            <artifactId>controlsfx</artifactId>
            <version>11.2.1</version>
        </dependency>
        <dependency>
            <groupId>com.dlsc.formsfx</groupId>
            <artifactId>formsfx-core</artifactId>
            <version>11.6.0</version>
            <exclusions>
                <exclusion>
                    <groupId>org.openjfx</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>net.synedra</groupId>
            <artifactId>validatorfx</artifactId>
            <version>0.5.0</version>
            <exclusions>
                <exclusion>
                    <groupId>org.openjfx</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.33</version>
        </dependency>
        <dependency>
            <groupId>org.mindrot</groupId>
            <artifactId>jbcrypt</artifactId>
            <version>0.4</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>21</version> <!-- Remplacez par la dernière version, compatible avec votre JDK -->
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>21</version> <!-- Remplacez par la dernière version -->
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-web</artifactId>
            <version>21</version> <!-- Remplacez par la dernière version -->
        </dependency>
        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-javafx</artifactId>
            <version>12.3.1</version>
        </dependency>

        <dependency>
            <groupId>org.kordamp.bootstrapfx</groupId>
            <artifactId>bootstrapfx-core</artifactId>
            <version>0.4.0</version>
        </dependency>
        <dependency>
            <groupId>eu.hansolo</groupId>
            <artifactId>tilesfx</artifactId>
            <version>21.0.3</version>
            <exclusions>
                <exclusion>
                    <groupId>org.openjfx</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.github.almasb</groupId>
            <artifactId>fxgl</artifactId>
            <version>17.3</version>
            <exclusions>
                <exclusion>
                    <groupId>org.openjfx</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.13.0</version>
                <configuration>
                    <source>21</source>
                    <target>21</target>
                    <compilerArgs>--enable-preview</compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.8</version>
                <executions>
                    <execution>
                        <!-- Default configuration for running with: mvn clean javafx:run -->
                        <id>default-cli</id>
                        <configuration>
                            <mainClass>com.example.stage/com.example.stage.HelloApplication</mainClass>
                            <launcher>app</launcher>
                            <jlinkZipName>app</jlinkZipName>
                            <jlinkImageName>app</jlinkImageName>
                            <noManPages>true</noManPages>
                            <stripDebug>true</stripDebug>
                            <noHeaderFiles>true</noHeaderFiles>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
==================================================

